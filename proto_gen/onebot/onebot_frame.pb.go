// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: onebot_frame.proto

package onebot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Frame_FrameType int32

const (
	Frame_TUNKNOWN                  Frame_FrameType = 0
	Frame_TPrivateMessageEvent      Frame_FrameType = 101
	Frame_TGroupMessageEvent        Frame_FrameType = 102
	Frame_TGroupUploadNoticeEvent   Frame_FrameType = 103
	Frame_TGroupAdminNoticeEvent    Frame_FrameType = 104
	Frame_TGroupDecreaseNoticeEvent Frame_FrameType = 105
	Frame_TGroupIncreaseNoticeEvent Frame_FrameType = 106
	Frame_TGroupBanNoticeEvent      Frame_FrameType = 107
	Frame_TFriendAddNoticeEvent     Frame_FrameType = 108
	Frame_TGroupRecallNoticeEvent   Frame_FrameType = 109
	Frame_TFriendRecallNoticeEvent  Frame_FrameType = 110
	Frame_TFriendRequestEvent       Frame_FrameType = 111
	Frame_TGroupRequestEvent        Frame_FrameType = 112
	Frame_TGroupTempMessageEvent    Frame_FrameType = 113
	Frame_TGroupNotifyEvent         Frame_FrameType = 114
	Frame_TChannelMessageEvent      Frame_FrameType = 115
	Frame_TSendPrivateMsgReq        Frame_FrameType = 201
	Frame_TSendGroupMsgReq          Frame_FrameType = 202
	Frame_TSendMsgReq               Frame_FrameType = 203
	Frame_TDeleteMsgReq             Frame_FrameType = 204
	Frame_TGetMsgReq                Frame_FrameType = 205
	Frame_TGetForwardMsgReq         Frame_FrameType = 206
	Frame_TSendLikeReq              Frame_FrameType = 207
	Frame_TSetGroupKickReq          Frame_FrameType = 208
	Frame_TSetGroupBanReq           Frame_FrameType = 209
	Frame_TSetGroupAnonymousReq     Frame_FrameType = 210
	Frame_TSetGroupWholeBanReq      Frame_FrameType = 211
	Frame_TSetGroupAdminReq         Frame_FrameType = 212
	Frame_TSetGroupAnonymousBanReq  Frame_FrameType = 213
	Frame_TSetGroupCardReq          Frame_FrameType = 214
	Frame_TSetGroupNameReq          Frame_FrameType = 215
	Frame_TSetGroupLeaveReq         Frame_FrameType = 216
	Frame_TSetGroupSpecialTitleReq  Frame_FrameType = 217
	Frame_TSetFriendAddRequestReq   Frame_FrameType = 218
	Frame_TSetGroupAddRequestReq    Frame_FrameType = 219
	Frame_TGetLoginInfoReq          Frame_FrameType = 220
	Frame_TGetStrangerInfoReq       Frame_FrameType = 221
	Frame_TGetFriendListReq         Frame_FrameType = 222
	Frame_TGetGroupInfoReq          Frame_FrameType = 223
	Frame_TGetGroupListReq          Frame_FrameType = 224
	Frame_TGetGroupMemberInfoReq    Frame_FrameType = 225
	Frame_TGetGroupMemberListReq    Frame_FrameType = 226
	Frame_TGetGroupHonorInfoReq     Frame_FrameType = 227
	Frame_TGetCookiesReq            Frame_FrameType = 228
	Frame_TGetCsrfTokenReq          Frame_FrameType = 229
	Frame_TGetCredentialsReq        Frame_FrameType = 230
	Frame_TGetRecordReq             Frame_FrameType = 231
	Frame_TGetImageReq              Frame_FrameType = 232
	Frame_TCanSendImageReq          Frame_FrameType = 233
	Frame_TCanSendRecordReq         Frame_FrameType = 234
	Frame_TGetStatusReq             Frame_FrameType = 235
	Frame_TGetVersionInfoReq        Frame_FrameType = 236
	Frame_TSetRestartReq            Frame_FrameType = 237
	Frame_TCleanCacheReq            Frame_FrameType = 238
	Frame_TSetGroupSignInReq        Frame_FrameType = 239
	Frame_TSendMusicReq             Frame_FrameType = 240
	Frame_TSendGroupPokeReq         Frame_FrameType = 241
	Frame_TSendFriendPokeReq        Frame_FrameType = 242
	Frame_TSendChannelMsgReq        Frame_FrameType = 243
	Frame_TSendPrivateMsgResp       Frame_FrameType = 301
	Frame_TSendGroupMsgResp         Frame_FrameType = 302
	Frame_TSendMsgResp              Frame_FrameType = 303
	Frame_TDeleteMsgResp            Frame_FrameType = 304
	Frame_TGetMsgResp               Frame_FrameType = 305
	Frame_TGetForwardMsgResp        Frame_FrameType = 306
	Frame_TSendLikeResp             Frame_FrameType = 307
	Frame_TSetGroupKickResp         Frame_FrameType = 308
	Frame_TSetGroupBanResp          Frame_FrameType = 309
	Frame_TSetGroupAnonymousResp    Frame_FrameType = 310
	Frame_TSetGroupWholeBanResp     Frame_FrameType = 311
	Frame_TSetGroupAdminResp        Frame_FrameType = 312
	Frame_TSetGroupAnonymousBanResp Frame_FrameType = 313
	Frame_TSetGroupCardResp         Frame_FrameType = 314
	Frame_TSetGroupNameResp         Frame_FrameType = 315
	Frame_TSetGroupLeaveResp        Frame_FrameType = 316
	Frame_TSetGroupSpecialTitleResp Frame_FrameType = 317
	Frame_TSetFriendAddRequestResp  Frame_FrameType = 318
	Frame_TSetGroupAddRequestResp   Frame_FrameType = 319
	Frame_TGetLoginInfoResp         Frame_FrameType = 320
	Frame_TGetStrangerInfoResp      Frame_FrameType = 321
	Frame_TGetFriendListResp        Frame_FrameType = 322
	Frame_TGetGroupInfoResp         Frame_FrameType = 323
	Frame_TGetGroupListResp         Frame_FrameType = 324
	Frame_TGetGroupMemberInfoResp   Frame_FrameType = 325
	Frame_TGetGroupMemberListResp   Frame_FrameType = 326
	Frame_TGetGroupHonorInfoResp    Frame_FrameType = 327
	Frame_TGetCookiesResp           Frame_FrameType = 328
	Frame_TGetCsrfTokenResp         Frame_FrameType = 329
	Frame_TGetCredentialsResp       Frame_FrameType = 330
	Frame_TGetRecordResp            Frame_FrameType = 331
	Frame_TGetImageResp             Frame_FrameType = 332
	Frame_TCanSendImageResp         Frame_FrameType = 333
	Frame_TCanSendRecordResp        Frame_FrameType = 334
	Frame_TGetStatusResp            Frame_FrameType = 335
	Frame_TGetVersionInfoResp       Frame_FrameType = 336
	Frame_TSetRestartResp           Frame_FrameType = 337
	Frame_TCleanCacheResp           Frame_FrameType = 338
	Frame_TSetGroupSignInResp       Frame_FrameType = 339
	Frame_TSendMusicResp            Frame_FrameType = 340
	Frame_TSendGroupPokeResp        Frame_FrameType = 341
	Frame_TSendFriendPokeResp       Frame_FrameType = 342
	Frame_TSendChannelMsgResp       Frame_FrameType = 343
)

// Enum value maps for Frame_FrameType.
var (
	Frame_FrameType_name = map[int32]string{
		0:   "TUNKNOWN",
		101: "TPrivateMessageEvent",
		102: "TGroupMessageEvent",
		103: "TGroupUploadNoticeEvent",
		104: "TGroupAdminNoticeEvent",
		105: "TGroupDecreaseNoticeEvent",
		106: "TGroupIncreaseNoticeEvent",
		107: "TGroupBanNoticeEvent",
		108: "TFriendAddNoticeEvent",
		109: "TGroupRecallNoticeEvent",
		110: "TFriendRecallNoticeEvent",
		111: "TFriendRequestEvent",
		112: "TGroupRequestEvent",
		113: "TGroupTempMessageEvent",
		114: "TGroupNotifyEvent",
		115: "TChannelMessageEvent",
		201: "TSendPrivateMsgReq",
		202: "TSendGroupMsgReq",
		203: "TSendMsgReq",
		204: "TDeleteMsgReq",
		205: "TGetMsgReq",
		206: "TGetForwardMsgReq",
		207: "TSendLikeReq",
		208: "TSetGroupKickReq",
		209: "TSetGroupBanReq",
		210: "TSetGroupAnonymousReq",
		211: "TSetGroupWholeBanReq",
		212: "TSetGroupAdminReq",
		213: "TSetGroupAnonymousBanReq",
		214: "TSetGroupCardReq",
		215: "TSetGroupNameReq",
		216: "TSetGroupLeaveReq",
		217: "TSetGroupSpecialTitleReq",
		218: "TSetFriendAddRequestReq",
		219: "TSetGroupAddRequestReq",
		220: "TGetLoginInfoReq",
		221: "TGetStrangerInfoReq",
		222: "TGetFriendListReq",
		223: "TGetGroupInfoReq",
		224: "TGetGroupListReq",
		225: "TGetGroupMemberInfoReq",
		226: "TGetGroupMemberListReq",
		227: "TGetGroupHonorInfoReq",
		228: "TGetCookiesReq",
		229: "TGetCsrfTokenReq",
		230: "TGetCredentialsReq",
		231: "TGetRecordReq",
		232: "TGetImageReq",
		233: "TCanSendImageReq",
		234: "TCanSendRecordReq",
		235: "TGetStatusReq",
		236: "TGetVersionInfoReq",
		237: "TSetRestartReq",
		238: "TCleanCacheReq",
		239: "TSetGroupSignInReq",
		240: "TSendMusicReq",
		241: "TSendGroupPokeReq",
		242: "TSendFriendPokeReq",
		243: "TSendChannelMsgReq",
		301: "TSendPrivateMsgResp",
		302: "TSendGroupMsgResp",
		303: "TSendMsgResp",
		304: "TDeleteMsgResp",
		305: "TGetMsgResp",
		306: "TGetForwardMsgResp",
		307: "TSendLikeResp",
		308: "TSetGroupKickResp",
		309: "TSetGroupBanResp",
		310: "TSetGroupAnonymousResp",
		311: "TSetGroupWholeBanResp",
		312: "TSetGroupAdminResp",
		313: "TSetGroupAnonymousBanResp",
		314: "TSetGroupCardResp",
		315: "TSetGroupNameResp",
		316: "TSetGroupLeaveResp",
		317: "TSetGroupSpecialTitleResp",
		318: "TSetFriendAddRequestResp",
		319: "TSetGroupAddRequestResp",
		320: "TGetLoginInfoResp",
		321: "TGetStrangerInfoResp",
		322: "TGetFriendListResp",
		323: "TGetGroupInfoResp",
		324: "TGetGroupListResp",
		325: "TGetGroupMemberInfoResp",
		326: "TGetGroupMemberListResp",
		327: "TGetGroupHonorInfoResp",
		328: "TGetCookiesResp",
		329: "TGetCsrfTokenResp",
		330: "TGetCredentialsResp",
		331: "TGetRecordResp",
		332: "TGetImageResp",
		333: "TCanSendImageResp",
		334: "TCanSendRecordResp",
		335: "TGetStatusResp",
		336: "TGetVersionInfoResp",
		337: "TSetRestartResp",
		338: "TCleanCacheResp",
		339: "TSetGroupSignInResp",
		340: "TSendMusicResp",
		341: "TSendGroupPokeResp",
		342: "TSendFriendPokeResp",
		343: "TSendChannelMsgResp",
	}
	Frame_FrameType_value = map[string]int32{
		"TUNKNOWN":                  0,
		"TPrivateMessageEvent":      101,
		"TGroupMessageEvent":        102,
		"TGroupUploadNoticeEvent":   103,
		"TGroupAdminNoticeEvent":    104,
		"TGroupDecreaseNoticeEvent": 105,
		"TGroupIncreaseNoticeEvent": 106,
		"TGroupBanNoticeEvent":      107,
		"TFriendAddNoticeEvent":     108,
		"TGroupRecallNoticeEvent":   109,
		"TFriendRecallNoticeEvent":  110,
		"TFriendRequestEvent":       111,
		"TGroupRequestEvent":        112,
		"TGroupTempMessageEvent":    113,
		"TGroupNotifyEvent":         114,
		"TChannelMessageEvent":      115,
		"TSendPrivateMsgReq":        201,
		"TSendGroupMsgReq":          202,
		"TSendMsgReq":               203,
		"TDeleteMsgReq":             204,
		"TGetMsgReq":                205,
		"TGetForwardMsgReq":         206,
		"TSendLikeReq":              207,
		"TSetGroupKickReq":          208,
		"TSetGroupBanReq":           209,
		"TSetGroupAnonymousReq":     210,
		"TSetGroupWholeBanReq":      211,
		"TSetGroupAdminReq":         212,
		"TSetGroupAnonymousBanReq":  213,
		"TSetGroupCardReq":          214,
		"TSetGroupNameReq":          215,
		"TSetGroupLeaveReq":         216,
		"TSetGroupSpecialTitleReq":  217,
		"TSetFriendAddRequestReq":   218,
		"TSetGroupAddRequestReq":    219,
		"TGetLoginInfoReq":          220,
		"TGetStrangerInfoReq":       221,
		"TGetFriendListReq":         222,
		"TGetGroupInfoReq":          223,
		"TGetGroupListReq":          224,
		"TGetGroupMemberInfoReq":    225,
		"TGetGroupMemberListReq":    226,
		"TGetGroupHonorInfoReq":     227,
		"TGetCookiesReq":            228,
		"TGetCsrfTokenReq":          229,
		"TGetCredentialsReq":        230,
		"TGetRecordReq":             231,
		"TGetImageReq":              232,
		"TCanSendImageReq":          233,
		"TCanSendRecordReq":         234,
		"TGetStatusReq":             235,
		"TGetVersionInfoReq":        236,
		"TSetRestartReq":            237,
		"TCleanCacheReq":            238,
		"TSetGroupSignInReq":        239,
		"TSendMusicReq":             240,
		"TSendGroupPokeReq":         241,
		"TSendFriendPokeReq":        242,
		"TSendChannelMsgReq":        243,
		"TSendPrivateMsgResp":       301,
		"TSendGroupMsgResp":         302,
		"TSendMsgResp":              303,
		"TDeleteMsgResp":            304,
		"TGetMsgResp":               305,
		"TGetForwardMsgResp":        306,
		"TSendLikeResp":             307,
		"TSetGroupKickResp":         308,
		"TSetGroupBanResp":          309,
		"TSetGroupAnonymousResp":    310,
		"TSetGroupWholeBanResp":     311,
		"TSetGroupAdminResp":        312,
		"TSetGroupAnonymousBanResp": 313,
		"TSetGroupCardResp":         314,
		"TSetGroupNameResp":         315,
		"TSetGroupLeaveResp":        316,
		"TSetGroupSpecialTitleResp": 317,
		"TSetFriendAddRequestResp":  318,
		"TSetGroupAddRequestResp":   319,
		"TGetLoginInfoResp":         320,
		"TGetStrangerInfoResp":      321,
		"TGetFriendListResp":        322,
		"TGetGroupInfoResp":         323,
		"TGetGroupListResp":         324,
		"TGetGroupMemberInfoResp":   325,
		"TGetGroupMemberListResp":   326,
		"TGetGroupHonorInfoResp":    327,
		"TGetCookiesResp":           328,
		"TGetCsrfTokenResp":         329,
		"TGetCredentialsResp":       330,
		"TGetRecordResp":            331,
		"TGetImageResp":             332,
		"TCanSendImageResp":         333,
		"TCanSendRecordResp":        334,
		"TGetStatusResp":            335,
		"TGetVersionInfoResp":       336,
		"TSetRestartResp":           337,
		"TCleanCacheResp":           338,
		"TSetGroupSignInResp":       339,
		"TSendMusicResp":            340,
		"TSendGroupPokeResp":        341,
		"TSendFriendPokeResp":       342,
		"TSendChannelMsgResp":       343,
	}
)

func (x Frame_FrameType) Enum() *Frame_FrameType {
	p := new(Frame_FrameType)
	*p = x
	return p
}

func (x Frame_FrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Frame_FrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_onebot_frame_proto_enumTypes[0].Descriptor()
}

func (Frame_FrameType) Type() protoreflect.EnumType {
	return &file_onebot_frame_proto_enumTypes[0]
}

func (x Frame_FrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Frame_FrameType.Descriptor instead.
func (Frame_FrameType) EnumDescriptor() ([]byte, []int) {
	return file_onebot_frame_proto_rawDescGZIP(), []int{0, 0}
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotId     int64             `protobuf:"varint,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	FrameType Frame_FrameType   `protobuf:"varint,2,opt,name=frame_type,json=frameType,proto3,enum=onebot.Frame_FrameType" json:"frame_type,omitempty"`
	Echo      string            `protobuf:"bytes,3,opt,name=echo,proto3" json:"echo,omitempty"`
	Ok        bool              `protobuf:"varint,4,opt,name=ok,proto3" json:"ok,omitempty"` // 是否正常 （API resp）
	Extra     map[string]string `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Data:
	//
	//	*Frame_PrivateMessageEvent
	//	*Frame_GroupMessageEvent
	//	*Frame_GroupUploadNoticeEvent
	//	*Frame_GroupAdminNoticeEvent
	//	*Frame_GroupDecreaseNoticeEvent
	//	*Frame_GroupIncreaseNoticeEvent
	//	*Frame_GroupBanNoticeEvent
	//	*Frame_FriendAddNoticeEvent
	//	*Frame_GroupRecallNoticeEvent
	//	*Frame_FriendRecallNoticeEvent
	//	*Frame_FriendRequestEvent
	//	*Frame_GroupRequestEvent
	//	*Frame_GroupTempMessageEvent
	//	*Frame_GroupNotifyEvent
	//	*Frame_ChannelMessageEvent
	//	*Frame_SendPrivateMsgReq
	//	*Frame_SendGroupMsgReq
	//	*Frame_SendMsgReq
	//	*Frame_DeleteMsgReq
	//	*Frame_GetMsgReq
	//	*Frame_GetForwardMsgReq
	//	*Frame_SendLikeReq
	//	*Frame_SetGroupKickReq
	//	*Frame_SetGroupBanReq
	//	*Frame_SetGroupAnonymousBanReq
	//	*Frame_SetGroupWholeBanReq
	//	*Frame_SetGroupAdminReq
	//	*Frame_SetGroupAnonymousReq
	//	*Frame_SetGroupCardReq
	//	*Frame_SetGroupNameReq
	//	*Frame_SetGroupLeaveReq
	//	*Frame_SetGroupSpecialTitleReq
	//	*Frame_SetFriendAddRequestReq
	//	*Frame_SetGroupAddRequestReq
	//	*Frame_GetLoginInfoReq
	//	*Frame_GetStrangerInfoReq
	//	*Frame_GetFriendListReq
	//	*Frame_GetGroupInfoReq
	//	*Frame_GetGroupListReq
	//	*Frame_GetGroupMemberInfoReq
	//	*Frame_GetGroupMemberListReq
	//	*Frame_GetGroupHonorInfoReq
	//	*Frame_GetCookiesReq
	//	*Frame_GetCsrfTokenReq
	//	*Frame_GetCredentialsReq
	//	*Frame_GetRecordReq
	//	*Frame_GetImageReq
	//	*Frame_CanSendImageReq
	//	*Frame_CanSendRecordReq
	//	*Frame_GetStatusReq
	//	*Frame_GetVersionInfoReq
	//	*Frame_SetRestartReq
	//	*Frame_CleanCacheReq
	//	*Frame_SetGroupSignInReq
	//	*Frame_SendMusicReq
	//	*Frame_SendGroupPokeReq
	//	*Frame_SendFriendPokeReq
	//	*Frame_SendChannelMsgReq
	//	*Frame_SendPrivateMsgResp
	//	*Frame_SendGroupMsgResp
	//	*Frame_SendMsgResp
	//	*Frame_DeleteMsgResp
	//	*Frame_GetMsgResp
	//	*Frame_GetForwardMsgResp
	//	*Frame_SendLikeResp
	//	*Frame_SetGroupKickResp
	//	*Frame_SetGroupBanResp
	//	*Frame_SetGroupAnonymousBanResp
	//	*Frame_SetGroupWholeBanResp
	//	*Frame_SetGroupAdminResp
	//	*Frame_SetGroupAnonymousResp
	//	*Frame_SetGroupCardResp
	//	*Frame_SetGroupNameResp
	//	*Frame_SetGroupLeaveResp
	//	*Frame_SetGroupSpecialTitleResp
	//	*Frame_SetFriendAddRequestResp
	//	*Frame_SetGroupAddRequestResp
	//	*Frame_GetLoginInfoResp
	//	*Frame_GetStrangerInfoResp
	//	*Frame_GetFriendListResp
	//	*Frame_GetGroupInfoResp
	//	*Frame_GetGroupListResp
	//	*Frame_GetGroupMemberInfoResp
	//	*Frame_GetGroupMemberListResp
	//	*Frame_GetGroupHonorInfoResp
	//	*Frame_GetCookiesResp
	//	*Frame_GetCsrfTokenResp
	//	*Frame_GetCredentialsResp
	//	*Frame_GetRecordResp
	//	*Frame_GetImageResp
	//	*Frame_CanSendImageResp
	//	*Frame_CanSendRecordResp
	//	*Frame_GetStatusResp
	//	*Frame_GetVersionInfoResp
	//	*Frame_SetRestartResp
	//	*Frame_CleanCacheResp
	//	*Frame_SetGroupSignInResp
	//	*Frame_SendMusicResp
	//	*Frame_SendGroupPokeResp
	//	*Frame_SendFriendPokeResp
	//	*Frame_SendChannelMsgResp
	Data isFrame_Data `protobuf_oneof:"data"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onebot_frame_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_onebot_frame_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_onebot_frame_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetBotId() int64 {
	if x != nil {
		return x.BotId
	}
	return 0
}

func (x *Frame) GetFrameType() Frame_FrameType {
	if x != nil {
		return x.FrameType
	}
	return Frame_TUNKNOWN
}

func (x *Frame) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

func (x *Frame) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *Frame) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (m *Frame) GetData() isFrame_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Frame) GetPrivateMessageEvent() *PrivateMessageEvent {
	if x, ok := x.GetData().(*Frame_PrivateMessageEvent); ok {
		return x.PrivateMessageEvent
	}
	return nil
}

func (x *Frame) GetGroupMessageEvent() *GroupMessageEvent {
	if x, ok := x.GetData().(*Frame_GroupMessageEvent); ok {
		return x.GroupMessageEvent
	}
	return nil
}

func (x *Frame) GetGroupUploadNoticeEvent() *GroupUploadNoticeEvent {
	if x, ok := x.GetData().(*Frame_GroupUploadNoticeEvent); ok {
		return x.GroupUploadNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupAdminNoticeEvent() *GroupAdminNoticeEvent {
	if x, ok := x.GetData().(*Frame_GroupAdminNoticeEvent); ok {
		return x.GroupAdminNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupDecreaseNoticeEvent() *GroupDecreaseNoticeEvent {
	if x, ok := x.GetData().(*Frame_GroupDecreaseNoticeEvent); ok {
		return x.GroupDecreaseNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupIncreaseNoticeEvent() *GroupIncreaseNoticeEvent {
	if x, ok := x.GetData().(*Frame_GroupIncreaseNoticeEvent); ok {
		return x.GroupIncreaseNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupBanNoticeEvent() *GroupBanNoticeEvent {
	if x, ok := x.GetData().(*Frame_GroupBanNoticeEvent); ok {
		return x.GroupBanNoticeEvent
	}
	return nil
}

func (x *Frame) GetFriendAddNoticeEvent() *FriendAddNoticeEvent {
	if x, ok := x.GetData().(*Frame_FriendAddNoticeEvent); ok {
		return x.FriendAddNoticeEvent
	}
	return nil
}

func (x *Frame) GetGroupRecallNoticeEvent() *GroupRecallNoticeEvent {
	if x, ok := x.GetData().(*Frame_GroupRecallNoticeEvent); ok {
		return x.GroupRecallNoticeEvent
	}
	return nil
}

func (x *Frame) GetFriendRecallNoticeEvent() *FriendRecallNoticeEvent {
	if x, ok := x.GetData().(*Frame_FriendRecallNoticeEvent); ok {
		return x.FriendRecallNoticeEvent
	}
	return nil
}

func (x *Frame) GetFriendRequestEvent() *FriendRequestEvent {
	if x, ok := x.GetData().(*Frame_FriendRequestEvent); ok {
		return x.FriendRequestEvent
	}
	return nil
}

func (x *Frame) GetGroupRequestEvent() *GroupRequestEvent {
	if x, ok := x.GetData().(*Frame_GroupRequestEvent); ok {
		return x.GroupRequestEvent
	}
	return nil
}

func (x *Frame) GetGroupTempMessageEvent() *GroupTempMessageEvent {
	if x, ok := x.GetData().(*Frame_GroupTempMessageEvent); ok {
		return x.GroupTempMessageEvent
	}
	return nil
}

func (x *Frame) GetGroupNotifyEvent() *GroupNotifyEvent {
	if x, ok := x.GetData().(*Frame_GroupNotifyEvent); ok {
		return x.GroupNotifyEvent
	}
	return nil
}

func (x *Frame) GetChannelMessageEvent() *ChannelMessageEvent {
	if x, ok := x.GetData().(*Frame_ChannelMessageEvent); ok {
		return x.ChannelMessageEvent
	}
	return nil
}

func (x *Frame) GetSendPrivateMsgReq() *SendPrivateMsgReq {
	if x, ok := x.GetData().(*Frame_SendPrivateMsgReq); ok {
		return x.SendPrivateMsgReq
	}
	return nil
}

func (x *Frame) GetSendGroupMsgReq() *SendGroupMsgReq {
	if x, ok := x.GetData().(*Frame_SendGroupMsgReq); ok {
		return x.SendGroupMsgReq
	}
	return nil
}

func (x *Frame) GetSendMsgReq() *SendMsgReq {
	if x, ok := x.GetData().(*Frame_SendMsgReq); ok {
		return x.SendMsgReq
	}
	return nil
}

func (x *Frame) GetDeleteMsgReq() *DeleteMsgReq {
	if x, ok := x.GetData().(*Frame_DeleteMsgReq); ok {
		return x.DeleteMsgReq
	}
	return nil
}

func (x *Frame) GetGetMsgReq() *GetMsgReq {
	if x, ok := x.GetData().(*Frame_GetMsgReq); ok {
		return x.GetMsgReq
	}
	return nil
}

func (x *Frame) GetGetForwardMsgReq() *GetForwardMsgReq {
	if x, ok := x.GetData().(*Frame_GetForwardMsgReq); ok {
		return x.GetForwardMsgReq
	}
	return nil
}

func (x *Frame) GetSendLikeReq() *SendLikeReq {
	if x, ok := x.GetData().(*Frame_SendLikeReq); ok {
		return x.SendLikeReq
	}
	return nil
}

func (x *Frame) GetSetGroupKickReq() *SetGroupKickReq {
	if x, ok := x.GetData().(*Frame_SetGroupKickReq); ok {
		return x.SetGroupKickReq
	}
	return nil
}

func (x *Frame) GetSetGroupBanReq() *SetGroupBanReq {
	if x, ok := x.GetData().(*Frame_SetGroupBanReq); ok {
		return x.SetGroupBanReq
	}
	return nil
}

func (x *Frame) GetSetGroupAnonymousBanReq() *SetGroupAnonymousBanReq {
	if x, ok := x.GetData().(*Frame_SetGroupAnonymousBanReq); ok {
		return x.SetGroupAnonymousBanReq
	}
	return nil
}

func (x *Frame) GetSetGroupWholeBanReq() *SetGroupWholeBanReq {
	if x, ok := x.GetData().(*Frame_SetGroupWholeBanReq); ok {
		return x.SetGroupWholeBanReq
	}
	return nil
}

func (x *Frame) GetSetGroupAdminReq() *SetGroupAdminReq {
	if x, ok := x.GetData().(*Frame_SetGroupAdminReq); ok {
		return x.SetGroupAdminReq
	}
	return nil
}

func (x *Frame) GetSetGroupAnonymousReq() *SetGroupAnonymousReq {
	if x, ok := x.GetData().(*Frame_SetGroupAnonymousReq); ok {
		return x.SetGroupAnonymousReq
	}
	return nil
}

func (x *Frame) GetSetGroupCardReq() *SetGroupCardReq {
	if x, ok := x.GetData().(*Frame_SetGroupCardReq); ok {
		return x.SetGroupCardReq
	}
	return nil
}

func (x *Frame) GetSetGroupNameReq() *SetGroupNameReq {
	if x, ok := x.GetData().(*Frame_SetGroupNameReq); ok {
		return x.SetGroupNameReq
	}
	return nil
}

func (x *Frame) GetSetGroupLeaveReq() *SetGroupLeaveReq {
	if x, ok := x.GetData().(*Frame_SetGroupLeaveReq); ok {
		return x.SetGroupLeaveReq
	}
	return nil
}

func (x *Frame) GetSetGroupSpecialTitleReq() *SetGroupSpecialTitleReq {
	if x, ok := x.GetData().(*Frame_SetGroupSpecialTitleReq); ok {
		return x.SetGroupSpecialTitleReq
	}
	return nil
}

func (x *Frame) GetSetFriendAddRequestReq() *SetFriendAddRequestReq {
	if x, ok := x.GetData().(*Frame_SetFriendAddRequestReq); ok {
		return x.SetFriendAddRequestReq
	}
	return nil
}

func (x *Frame) GetSetGroupAddRequestReq() *SetGroupAddRequestReq {
	if x, ok := x.GetData().(*Frame_SetGroupAddRequestReq); ok {
		return x.SetGroupAddRequestReq
	}
	return nil
}

func (x *Frame) GetGetLoginInfoReq() *GetLoginInfoReq {
	if x, ok := x.GetData().(*Frame_GetLoginInfoReq); ok {
		return x.GetLoginInfoReq
	}
	return nil
}

func (x *Frame) GetGetStrangerInfoReq() *GetStrangerInfoReq {
	if x, ok := x.GetData().(*Frame_GetStrangerInfoReq); ok {
		return x.GetStrangerInfoReq
	}
	return nil
}

func (x *Frame) GetGetFriendListReq() *GetFriendListReq {
	if x, ok := x.GetData().(*Frame_GetFriendListReq); ok {
		return x.GetFriendListReq
	}
	return nil
}

func (x *Frame) GetGetGroupInfoReq() *GetGroupInfoReq {
	if x, ok := x.GetData().(*Frame_GetGroupInfoReq); ok {
		return x.GetGroupInfoReq
	}
	return nil
}

func (x *Frame) GetGetGroupListReq() *GetGroupListReq {
	if x, ok := x.GetData().(*Frame_GetGroupListReq); ok {
		return x.GetGroupListReq
	}
	return nil
}

func (x *Frame) GetGetGroupMemberInfoReq() *GetGroupMemberInfoReq {
	if x, ok := x.GetData().(*Frame_GetGroupMemberInfoReq); ok {
		return x.GetGroupMemberInfoReq
	}
	return nil
}

func (x *Frame) GetGetGroupMemberListReq() *GetGroupMemberListReq {
	if x, ok := x.GetData().(*Frame_GetGroupMemberListReq); ok {
		return x.GetGroupMemberListReq
	}
	return nil
}

func (x *Frame) GetGetGroupHonorInfoReq() *GetGroupHonorInfoReq {
	if x, ok := x.GetData().(*Frame_GetGroupHonorInfoReq); ok {
		return x.GetGroupHonorInfoReq
	}
	return nil
}

func (x *Frame) GetGetCookiesReq() *GetCookiesReq {
	if x, ok := x.GetData().(*Frame_GetCookiesReq); ok {
		return x.GetCookiesReq
	}
	return nil
}

func (x *Frame) GetGetCsrfTokenReq() *GetCsrfTokenReq {
	if x, ok := x.GetData().(*Frame_GetCsrfTokenReq); ok {
		return x.GetCsrfTokenReq
	}
	return nil
}

func (x *Frame) GetGetCredentialsReq() *GetCredentialsReq {
	if x, ok := x.GetData().(*Frame_GetCredentialsReq); ok {
		return x.GetCredentialsReq
	}
	return nil
}

func (x *Frame) GetGetRecordReq() *GetRecordReq {
	if x, ok := x.GetData().(*Frame_GetRecordReq); ok {
		return x.GetRecordReq
	}
	return nil
}

func (x *Frame) GetGetImageReq() *GetImageReq {
	if x, ok := x.GetData().(*Frame_GetImageReq); ok {
		return x.GetImageReq
	}
	return nil
}

func (x *Frame) GetCanSendImageReq() *CanSendImageReq {
	if x, ok := x.GetData().(*Frame_CanSendImageReq); ok {
		return x.CanSendImageReq
	}
	return nil
}

func (x *Frame) GetCanSendRecordReq() *CanSendRecordReq {
	if x, ok := x.GetData().(*Frame_CanSendRecordReq); ok {
		return x.CanSendRecordReq
	}
	return nil
}

func (x *Frame) GetGetStatusReq() *GetStatusReq {
	if x, ok := x.GetData().(*Frame_GetStatusReq); ok {
		return x.GetStatusReq
	}
	return nil
}

func (x *Frame) GetGetVersionInfoReq() *GetVersionInfoReq {
	if x, ok := x.GetData().(*Frame_GetVersionInfoReq); ok {
		return x.GetVersionInfoReq
	}
	return nil
}

func (x *Frame) GetSetRestartReq() *SetRestartReq {
	if x, ok := x.GetData().(*Frame_SetRestartReq); ok {
		return x.SetRestartReq
	}
	return nil
}

func (x *Frame) GetCleanCacheReq() *CleanCacheReq {
	if x, ok := x.GetData().(*Frame_CleanCacheReq); ok {
		return x.CleanCacheReq
	}
	return nil
}

func (x *Frame) GetSetGroupSignInReq() *SetGroupSignInReq {
	if x, ok := x.GetData().(*Frame_SetGroupSignInReq); ok {
		return x.SetGroupSignInReq
	}
	return nil
}

func (x *Frame) GetSendMusicReq() *SendMusicReq {
	if x, ok := x.GetData().(*Frame_SendMusicReq); ok {
		return x.SendMusicReq
	}
	return nil
}

func (x *Frame) GetSendGroupPokeReq() *SendGroupPokeReq {
	if x, ok := x.GetData().(*Frame_SendGroupPokeReq); ok {
		return x.SendGroupPokeReq
	}
	return nil
}

func (x *Frame) GetSendFriendPokeReq() *SendFriendPokeReq {
	if x, ok := x.GetData().(*Frame_SendFriendPokeReq); ok {
		return x.SendFriendPokeReq
	}
	return nil
}

func (x *Frame) GetSendChannelMsgReq() *SendChannelMsgReq {
	if x, ok := x.GetData().(*Frame_SendChannelMsgReq); ok {
		return x.SendChannelMsgReq
	}
	return nil
}

func (x *Frame) GetSendPrivateMsgResp() *SendPrivateMsgResp {
	if x, ok := x.GetData().(*Frame_SendPrivateMsgResp); ok {
		return x.SendPrivateMsgResp
	}
	return nil
}

func (x *Frame) GetSendGroupMsgResp() *SendGroupMsgResp {
	if x, ok := x.GetData().(*Frame_SendGroupMsgResp); ok {
		return x.SendGroupMsgResp
	}
	return nil
}

func (x *Frame) GetSendMsgResp() *SendMsgResp {
	if x, ok := x.GetData().(*Frame_SendMsgResp); ok {
		return x.SendMsgResp
	}
	return nil
}

func (x *Frame) GetDeleteMsgResp() *DeleteMsgResp {
	if x, ok := x.GetData().(*Frame_DeleteMsgResp); ok {
		return x.DeleteMsgResp
	}
	return nil
}

func (x *Frame) GetGetMsgResp() *GetMsgResp {
	if x, ok := x.GetData().(*Frame_GetMsgResp); ok {
		return x.GetMsgResp
	}
	return nil
}

func (x *Frame) GetGetForwardMsgResp() *GetForwardMsgResp {
	if x, ok := x.GetData().(*Frame_GetForwardMsgResp); ok {
		return x.GetForwardMsgResp
	}
	return nil
}

func (x *Frame) GetSendLikeResp() *SendLikeResp {
	if x, ok := x.GetData().(*Frame_SendLikeResp); ok {
		return x.SendLikeResp
	}
	return nil
}

func (x *Frame) GetSetGroupKickResp() *SetGroupKickResp {
	if x, ok := x.GetData().(*Frame_SetGroupKickResp); ok {
		return x.SetGroupKickResp
	}
	return nil
}

func (x *Frame) GetSetGroupBanResp() *SetGroupBanResp {
	if x, ok := x.GetData().(*Frame_SetGroupBanResp); ok {
		return x.SetGroupBanResp
	}
	return nil
}

func (x *Frame) GetSetGroupAnonymousBanResp() *SetGroupAnonymousBanResp {
	if x, ok := x.GetData().(*Frame_SetGroupAnonymousBanResp); ok {
		return x.SetGroupAnonymousBanResp
	}
	return nil
}

func (x *Frame) GetSetGroupWholeBanResp() *SetGroupWholeBanResp {
	if x, ok := x.GetData().(*Frame_SetGroupWholeBanResp); ok {
		return x.SetGroupWholeBanResp
	}
	return nil
}

func (x *Frame) GetSetGroupAdminResp() *SetGroupAdminResp {
	if x, ok := x.GetData().(*Frame_SetGroupAdminResp); ok {
		return x.SetGroupAdminResp
	}
	return nil
}

func (x *Frame) GetSetGroupAnonymousResp() *SetGroupAnonymousResp {
	if x, ok := x.GetData().(*Frame_SetGroupAnonymousResp); ok {
		return x.SetGroupAnonymousResp
	}
	return nil
}

func (x *Frame) GetSetGroupCardResp() *SetGroupCardResp {
	if x, ok := x.GetData().(*Frame_SetGroupCardResp); ok {
		return x.SetGroupCardResp
	}
	return nil
}

func (x *Frame) GetSetGroupNameResp() *SetGroupNameResp {
	if x, ok := x.GetData().(*Frame_SetGroupNameResp); ok {
		return x.SetGroupNameResp
	}
	return nil
}

func (x *Frame) GetSetGroupLeaveResp() *SetGroupLeaveResp {
	if x, ok := x.GetData().(*Frame_SetGroupLeaveResp); ok {
		return x.SetGroupLeaveResp
	}
	return nil
}

func (x *Frame) GetSetGroupSpecialTitleResp() *SetGroupSpecialTitleResp {
	if x, ok := x.GetData().(*Frame_SetGroupSpecialTitleResp); ok {
		return x.SetGroupSpecialTitleResp
	}
	return nil
}

func (x *Frame) GetSetFriendAddRequestResp() *SetFriendAddRequestResp {
	if x, ok := x.GetData().(*Frame_SetFriendAddRequestResp); ok {
		return x.SetFriendAddRequestResp
	}
	return nil
}

func (x *Frame) GetSetGroupAddRequestResp() *SetGroupAddRequestResp {
	if x, ok := x.GetData().(*Frame_SetGroupAddRequestResp); ok {
		return x.SetGroupAddRequestResp
	}
	return nil
}

func (x *Frame) GetGetLoginInfoResp() *GetLoginInfoResp {
	if x, ok := x.GetData().(*Frame_GetLoginInfoResp); ok {
		return x.GetLoginInfoResp
	}
	return nil
}

func (x *Frame) GetGetStrangerInfoResp() *GetStrangerInfoResp {
	if x, ok := x.GetData().(*Frame_GetStrangerInfoResp); ok {
		return x.GetStrangerInfoResp
	}
	return nil
}

func (x *Frame) GetGetFriendListResp() *GetFriendListResp {
	if x, ok := x.GetData().(*Frame_GetFriendListResp); ok {
		return x.GetFriendListResp
	}
	return nil
}

func (x *Frame) GetGetGroupInfoResp() *GetGroupInfoResp {
	if x, ok := x.GetData().(*Frame_GetGroupInfoResp); ok {
		return x.GetGroupInfoResp
	}
	return nil
}

func (x *Frame) GetGetGroupListResp() *GetGroupListResp {
	if x, ok := x.GetData().(*Frame_GetGroupListResp); ok {
		return x.GetGroupListResp
	}
	return nil
}

func (x *Frame) GetGetGroupMemberInfoResp() *GetGroupMemberInfoResp {
	if x, ok := x.GetData().(*Frame_GetGroupMemberInfoResp); ok {
		return x.GetGroupMemberInfoResp
	}
	return nil
}

func (x *Frame) GetGetGroupMemberListResp() *GetGroupMemberListResp {
	if x, ok := x.GetData().(*Frame_GetGroupMemberListResp); ok {
		return x.GetGroupMemberListResp
	}
	return nil
}

func (x *Frame) GetGetGroupHonorInfoResp() *GetGroupHonorInfoResp {
	if x, ok := x.GetData().(*Frame_GetGroupHonorInfoResp); ok {
		return x.GetGroupHonorInfoResp
	}
	return nil
}

func (x *Frame) GetGetCookiesResp() *GetCookiesResp {
	if x, ok := x.GetData().(*Frame_GetCookiesResp); ok {
		return x.GetCookiesResp
	}
	return nil
}

func (x *Frame) GetGetCsrfTokenResp() *GetCsrfTokenResp {
	if x, ok := x.GetData().(*Frame_GetCsrfTokenResp); ok {
		return x.GetCsrfTokenResp
	}
	return nil
}

func (x *Frame) GetGetCredentialsResp() *GetCredentialsResp {
	if x, ok := x.GetData().(*Frame_GetCredentialsResp); ok {
		return x.GetCredentialsResp
	}
	return nil
}

func (x *Frame) GetGetRecordResp() *GetRecordResp {
	if x, ok := x.GetData().(*Frame_GetRecordResp); ok {
		return x.GetRecordResp
	}
	return nil
}

func (x *Frame) GetGetImageResp() *GetImageResp {
	if x, ok := x.GetData().(*Frame_GetImageResp); ok {
		return x.GetImageResp
	}
	return nil
}

func (x *Frame) GetCanSendImageResp() *CanSendImageResp {
	if x, ok := x.GetData().(*Frame_CanSendImageResp); ok {
		return x.CanSendImageResp
	}
	return nil
}

func (x *Frame) GetCanSendRecordResp() *CanSendRecordResp {
	if x, ok := x.GetData().(*Frame_CanSendRecordResp); ok {
		return x.CanSendRecordResp
	}
	return nil
}

func (x *Frame) GetGetStatusResp() *GetStatusResp {
	if x, ok := x.GetData().(*Frame_GetStatusResp); ok {
		return x.GetStatusResp
	}
	return nil
}

func (x *Frame) GetGetVersionInfoResp() *GetVersionInfoResp {
	if x, ok := x.GetData().(*Frame_GetVersionInfoResp); ok {
		return x.GetVersionInfoResp
	}
	return nil
}

func (x *Frame) GetSetRestartResp() *SetRestartResp {
	if x, ok := x.GetData().(*Frame_SetRestartResp); ok {
		return x.SetRestartResp
	}
	return nil
}

func (x *Frame) GetCleanCacheResp() *CleanCacheResp {
	if x, ok := x.GetData().(*Frame_CleanCacheResp); ok {
		return x.CleanCacheResp
	}
	return nil
}

func (x *Frame) GetSetGroupSignInResp() *SetGroupSignInResp {
	if x, ok := x.GetData().(*Frame_SetGroupSignInResp); ok {
		return x.SetGroupSignInResp
	}
	return nil
}

func (x *Frame) GetSendMusicResp() *SendMusicResp {
	if x, ok := x.GetData().(*Frame_SendMusicResp); ok {
		return x.SendMusicResp
	}
	return nil
}

func (x *Frame) GetSendGroupPokeResp() *SendGroupPokeResp {
	if x, ok := x.GetData().(*Frame_SendGroupPokeResp); ok {
		return x.SendGroupPokeResp
	}
	return nil
}

func (x *Frame) GetSendFriendPokeResp() *SendFriendPokeResp {
	if x, ok := x.GetData().(*Frame_SendFriendPokeResp); ok {
		return x.SendFriendPokeResp
	}
	return nil
}

func (x *Frame) GetSendChannelMsgResp() *SendChannelMsgResp {
	if x, ok := x.GetData().(*Frame_SendChannelMsgResp); ok {
		return x.SendChannelMsgResp
	}
	return nil
}

type isFrame_Data interface {
	isFrame_Data()
}

type Frame_PrivateMessageEvent struct {
	PrivateMessageEvent *PrivateMessageEvent `protobuf:"bytes,101,opt,name=private_message_event,json=privateMessageEvent,proto3,oneof"`
}

type Frame_GroupMessageEvent struct {
	GroupMessageEvent *GroupMessageEvent `protobuf:"bytes,102,opt,name=group_message_event,json=groupMessageEvent,proto3,oneof"`
}

type Frame_GroupUploadNoticeEvent struct {
	GroupUploadNoticeEvent *GroupUploadNoticeEvent `protobuf:"bytes,103,opt,name=group_upload_notice_event,json=groupUploadNoticeEvent,proto3,oneof"`
}

type Frame_GroupAdminNoticeEvent struct {
	GroupAdminNoticeEvent *GroupAdminNoticeEvent `protobuf:"bytes,104,opt,name=group_admin_notice_event,json=groupAdminNoticeEvent,proto3,oneof"`
}

type Frame_GroupDecreaseNoticeEvent struct {
	GroupDecreaseNoticeEvent *GroupDecreaseNoticeEvent `protobuf:"bytes,105,opt,name=group_decrease_notice_event,json=groupDecreaseNoticeEvent,proto3,oneof"`
}

type Frame_GroupIncreaseNoticeEvent struct {
	GroupIncreaseNoticeEvent *GroupIncreaseNoticeEvent `protobuf:"bytes,106,opt,name=group_increase_notice_event,json=groupIncreaseNoticeEvent,proto3,oneof"`
}

type Frame_GroupBanNoticeEvent struct {
	GroupBanNoticeEvent *GroupBanNoticeEvent `protobuf:"bytes,107,opt,name=group_ban_notice_event,json=groupBanNoticeEvent,proto3,oneof"`
}

type Frame_FriendAddNoticeEvent struct {
	FriendAddNoticeEvent *FriendAddNoticeEvent `protobuf:"bytes,108,opt,name=friend_add_notice_event,json=friendAddNoticeEvent,proto3,oneof"`
}

type Frame_GroupRecallNoticeEvent struct {
	GroupRecallNoticeEvent *GroupRecallNoticeEvent `protobuf:"bytes,109,opt,name=group_recall_notice_event,json=groupRecallNoticeEvent,proto3,oneof"`
}

type Frame_FriendRecallNoticeEvent struct {
	FriendRecallNoticeEvent *FriendRecallNoticeEvent `protobuf:"bytes,110,opt,name=friend_recall_notice_event,json=friendRecallNoticeEvent,proto3,oneof"`
}

type Frame_FriendRequestEvent struct {
	FriendRequestEvent *FriendRequestEvent `protobuf:"bytes,111,opt,name=friend_request_event,json=friendRequestEvent,proto3,oneof"`
}

type Frame_GroupRequestEvent struct {
	GroupRequestEvent *GroupRequestEvent `protobuf:"bytes,112,opt,name=group_request_event,json=groupRequestEvent,proto3,oneof"`
}

type Frame_GroupTempMessageEvent struct {
	GroupTempMessageEvent *GroupTempMessageEvent `protobuf:"bytes,113,opt,name=group_temp_message_event,json=groupTempMessageEvent,proto3,oneof"`
}

type Frame_GroupNotifyEvent struct {
	GroupNotifyEvent *GroupNotifyEvent `protobuf:"bytes,114,opt,name=group_notify_event,json=groupNotifyEvent,proto3,oneof"`
}

type Frame_ChannelMessageEvent struct {
	ChannelMessageEvent *ChannelMessageEvent `protobuf:"bytes,115,opt,name=channel_message_event,json=channelMessageEvent,proto3,oneof"`
}

type Frame_SendPrivateMsgReq struct {
	SendPrivateMsgReq *SendPrivateMsgReq `protobuf:"bytes,201,opt,name=send_private_msg_req,json=sendPrivateMsgReq,proto3,oneof"`
}

type Frame_SendGroupMsgReq struct {
	SendGroupMsgReq *SendGroupMsgReq `protobuf:"bytes,202,opt,name=send_group_msg_req,json=sendGroupMsgReq,proto3,oneof"`
}

type Frame_SendMsgReq struct {
	SendMsgReq *SendMsgReq `protobuf:"bytes,203,opt,name=send_msg_req,json=sendMsgReq,proto3,oneof"`
}

type Frame_DeleteMsgReq struct {
	DeleteMsgReq *DeleteMsgReq `protobuf:"bytes,204,opt,name=delete_msg_req,json=deleteMsgReq,proto3,oneof"`
}

type Frame_GetMsgReq struct {
	GetMsgReq *GetMsgReq `protobuf:"bytes,205,opt,name=get_msg_req,json=getMsgReq,proto3,oneof"`
}

type Frame_GetForwardMsgReq struct {
	GetForwardMsgReq *GetForwardMsgReq `protobuf:"bytes,206,opt,name=get_forward_msg_req,json=getForwardMsgReq,proto3,oneof"`
}

type Frame_SendLikeReq struct {
	SendLikeReq *SendLikeReq `protobuf:"bytes,207,opt,name=send_like_req,json=sendLikeReq,proto3,oneof"`
}

type Frame_SetGroupKickReq struct {
	SetGroupKickReq *SetGroupKickReq `protobuf:"bytes,208,opt,name=set_group_kick_req,json=setGroupKickReq,proto3,oneof"`
}

type Frame_SetGroupBanReq struct {
	SetGroupBanReq *SetGroupBanReq `protobuf:"bytes,209,opt,name=set_group_ban_req,json=setGroupBanReq,proto3,oneof"`
}

type Frame_SetGroupAnonymousBanReq struct {
	SetGroupAnonymousBanReq *SetGroupAnonymousBanReq `protobuf:"bytes,210,opt,name=set_group_anonymous_ban_req,json=setGroupAnonymousBanReq,proto3,oneof"`
}

type Frame_SetGroupWholeBanReq struct {
	SetGroupWholeBanReq *SetGroupWholeBanReq `protobuf:"bytes,211,opt,name=set_group_whole_ban_req,json=setGroupWholeBanReq,proto3,oneof"`
}

type Frame_SetGroupAdminReq struct {
	SetGroupAdminReq *SetGroupAdminReq `protobuf:"bytes,212,opt,name=set_group_admin_req,json=setGroupAdminReq,proto3,oneof"`
}

type Frame_SetGroupAnonymousReq struct {
	SetGroupAnonymousReq *SetGroupAnonymousReq `protobuf:"bytes,213,opt,name=set_group_anonymous_req,json=setGroupAnonymousReq,proto3,oneof"`
}

type Frame_SetGroupCardReq struct {
	SetGroupCardReq *SetGroupCardReq `protobuf:"bytes,214,opt,name=set_group_card_req,json=setGroupCardReq,proto3,oneof"`
}

type Frame_SetGroupNameReq struct {
	SetGroupNameReq *SetGroupNameReq `protobuf:"bytes,215,opt,name=set_group_name_req,json=setGroupNameReq,proto3,oneof"`
}

type Frame_SetGroupLeaveReq struct {
	SetGroupLeaveReq *SetGroupLeaveReq `protobuf:"bytes,216,opt,name=set_group_leave_req,json=setGroupLeaveReq,proto3,oneof"`
}

type Frame_SetGroupSpecialTitleReq struct {
	SetGroupSpecialTitleReq *SetGroupSpecialTitleReq `protobuf:"bytes,217,opt,name=set_group_special_title_req,json=setGroupSpecialTitleReq,proto3,oneof"`
}

type Frame_SetFriendAddRequestReq struct {
	SetFriendAddRequestReq *SetFriendAddRequestReq `protobuf:"bytes,218,opt,name=set_friend_add_request_req,json=setFriendAddRequestReq,proto3,oneof"`
}

type Frame_SetGroupAddRequestReq struct {
	SetGroupAddRequestReq *SetGroupAddRequestReq `protobuf:"bytes,219,opt,name=set_group_add_request_req,json=setGroupAddRequestReq,proto3,oneof"`
}

type Frame_GetLoginInfoReq struct {
	GetLoginInfoReq *GetLoginInfoReq `protobuf:"bytes,220,opt,name=get_login_info_req,json=getLoginInfoReq,proto3,oneof"`
}

type Frame_GetStrangerInfoReq struct {
	GetStrangerInfoReq *GetStrangerInfoReq `protobuf:"bytes,221,opt,name=get_stranger_info_req,json=getStrangerInfoReq,proto3,oneof"`
}

type Frame_GetFriendListReq struct {
	GetFriendListReq *GetFriendListReq `protobuf:"bytes,222,opt,name=get_friend_list_req,json=getFriendListReq,proto3,oneof"`
}

type Frame_GetGroupInfoReq struct {
	GetGroupInfoReq *GetGroupInfoReq `protobuf:"bytes,223,opt,name=get_group_info_req,json=getGroupInfoReq,proto3,oneof"`
}

type Frame_GetGroupListReq struct {
	GetGroupListReq *GetGroupListReq `protobuf:"bytes,224,opt,name=get_group_list_req,json=getGroupListReq,proto3,oneof"`
}

type Frame_GetGroupMemberInfoReq struct {
	GetGroupMemberInfoReq *GetGroupMemberInfoReq `protobuf:"bytes,225,opt,name=get_group_member_info_req,json=getGroupMemberInfoReq,proto3,oneof"`
}

type Frame_GetGroupMemberListReq struct {
	GetGroupMemberListReq *GetGroupMemberListReq `protobuf:"bytes,226,opt,name=get_group_member_list_req,json=getGroupMemberListReq,proto3,oneof"`
}

type Frame_GetGroupHonorInfoReq struct {
	GetGroupHonorInfoReq *GetGroupHonorInfoReq `protobuf:"bytes,227,opt,name=get_group_honor_info_req,json=getGroupHonorInfoReq,proto3,oneof"`
}

type Frame_GetCookiesReq struct {
	GetCookiesReq *GetCookiesReq `protobuf:"bytes,228,opt,name=get_cookies_req,json=getCookiesReq,proto3,oneof"`
}

type Frame_GetCsrfTokenReq struct {
	GetCsrfTokenReq *GetCsrfTokenReq `protobuf:"bytes,229,opt,name=get_csrf_token_req,json=getCsrfTokenReq,proto3,oneof"`
}

type Frame_GetCredentialsReq struct {
	GetCredentialsReq *GetCredentialsReq `protobuf:"bytes,230,opt,name=get_credentials_req,json=getCredentialsReq,proto3,oneof"`
}

type Frame_GetRecordReq struct {
	GetRecordReq *GetRecordReq `protobuf:"bytes,231,opt,name=get_record_req,json=getRecordReq,proto3,oneof"`
}

type Frame_GetImageReq struct {
	GetImageReq *GetImageReq `protobuf:"bytes,232,opt,name=get_image_req,json=getImageReq,proto3,oneof"`
}

type Frame_CanSendImageReq struct {
	CanSendImageReq *CanSendImageReq `protobuf:"bytes,233,opt,name=can_send_image_req,json=canSendImageReq,proto3,oneof"`
}

type Frame_CanSendRecordReq struct {
	CanSendRecordReq *CanSendRecordReq `protobuf:"bytes,234,opt,name=can_send_record_req,json=canSendRecordReq,proto3,oneof"`
}

type Frame_GetStatusReq struct {
	GetStatusReq *GetStatusReq `protobuf:"bytes,235,opt,name=get_status_req,json=getStatusReq,proto3,oneof"`
}

type Frame_GetVersionInfoReq struct {
	GetVersionInfoReq *GetVersionInfoReq `protobuf:"bytes,236,opt,name=get_version_info_req,json=getVersionInfoReq,proto3,oneof"`
}

type Frame_SetRestartReq struct {
	SetRestartReq *SetRestartReq `protobuf:"bytes,237,opt,name=set_restart_req,json=setRestartReq,proto3,oneof"`
}

type Frame_CleanCacheReq struct {
	CleanCacheReq *CleanCacheReq `protobuf:"bytes,238,opt,name=clean_cache_req,json=cleanCacheReq,proto3,oneof"`
}

type Frame_SetGroupSignInReq struct {
	SetGroupSignInReq *SetGroupSignInReq `protobuf:"bytes,239,opt,name=set_group_sign_in_req,json=setGroupSignInReq,proto3,oneof"`
}

type Frame_SendMusicReq struct {
	SendMusicReq *SendMusicReq `protobuf:"bytes,240,opt,name=send_music_req,json=sendMusicReq,proto3,oneof"`
}

type Frame_SendGroupPokeReq struct {
	SendGroupPokeReq *SendGroupPokeReq `protobuf:"bytes,241,opt,name=send_group_poke_req,json=sendGroupPokeReq,proto3,oneof"`
}

type Frame_SendFriendPokeReq struct {
	SendFriendPokeReq *SendFriendPokeReq `protobuf:"bytes,242,opt,name=send_friend_poke_req,json=sendFriendPokeReq,proto3,oneof"`
}

type Frame_SendChannelMsgReq struct {
	SendChannelMsgReq *SendChannelMsgReq `protobuf:"bytes,243,opt,name=send_channel_msg_req,json=sendChannelMsgReq,proto3,oneof"`
}

type Frame_SendPrivateMsgResp struct {
	SendPrivateMsgResp *SendPrivateMsgResp `protobuf:"bytes,301,opt,name=send_private_msg_resp,json=sendPrivateMsgResp,proto3,oneof"`
}

type Frame_SendGroupMsgResp struct {
	SendGroupMsgResp *SendGroupMsgResp `protobuf:"bytes,302,opt,name=send_group_msg_resp,json=sendGroupMsgResp,proto3,oneof"`
}

type Frame_SendMsgResp struct {
	SendMsgResp *SendMsgResp `protobuf:"bytes,303,opt,name=send_msg_resp,json=sendMsgResp,proto3,oneof"`
}

type Frame_DeleteMsgResp struct {
	DeleteMsgResp *DeleteMsgResp `protobuf:"bytes,304,opt,name=delete_msg_resp,json=deleteMsgResp,proto3,oneof"`
}

type Frame_GetMsgResp struct {
	GetMsgResp *GetMsgResp `protobuf:"bytes,305,opt,name=get_msg_resp,json=getMsgResp,proto3,oneof"`
}

type Frame_GetForwardMsgResp struct {
	GetForwardMsgResp *GetForwardMsgResp `protobuf:"bytes,306,opt,name=get_forward_msg_resp,json=getForwardMsgResp,proto3,oneof"`
}

type Frame_SendLikeResp struct {
	SendLikeResp *SendLikeResp `protobuf:"bytes,307,opt,name=send_like_resp,json=sendLikeResp,proto3,oneof"`
}

type Frame_SetGroupKickResp struct {
	SetGroupKickResp *SetGroupKickResp `protobuf:"bytes,308,opt,name=set_group_kick_resp,json=setGroupKickResp,proto3,oneof"`
}

type Frame_SetGroupBanResp struct {
	SetGroupBanResp *SetGroupBanResp `protobuf:"bytes,309,opt,name=set_group_ban_resp,json=setGroupBanResp,proto3,oneof"`
}

type Frame_SetGroupAnonymousBanResp struct {
	SetGroupAnonymousBanResp *SetGroupAnonymousBanResp `protobuf:"bytes,310,opt,name=set_group_anonymous_ban_resp,json=setGroupAnonymousBanResp,proto3,oneof"`
}

type Frame_SetGroupWholeBanResp struct {
	SetGroupWholeBanResp *SetGroupWholeBanResp `protobuf:"bytes,311,opt,name=set_group_whole_ban_resp,json=setGroupWholeBanResp,proto3,oneof"`
}

type Frame_SetGroupAdminResp struct {
	SetGroupAdminResp *SetGroupAdminResp `protobuf:"bytes,312,opt,name=set_group_admin_resp,json=setGroupAdminResp,proto3,oneof"`
}

type Frame_SetGroupAnonymousResp struct {
	SetGroupAnonymousResp *SetGroupAnonymousResp `protobuf:"bytes,313,opt,name=set_group_anonymous_resp,json=setGroupAnonymousResp,proto3,oneof"`
}

type Frame_SetGroupCardResp struct {
	SetGroupCardResp *SetGroupCardResp `protobuf:"bytes,314,opt,name=set_group_card_resp,json=setGroupCardResp,proto3,oneof"`
}

type Frame_SetGroupNameResp struct {
	SetGroupNameResp *SetGroupNameResp `protobuf:"bytes,315,opt,name=set_group_name_resp,json=setGroupNameResp,proto3,oneof"`
}

type Frame_SetGroupLeaveResp struct {
	SetGroupLeaveResp *SetGroupLeaveResp `protobuf:"bytes,316,opt,name=set_group_leave_resp,json=setGroupLeaveResp,proto3,oneof"`
}

type Frame_SetGroupSpecialTitleResp struct {
	SetGroupSpecialTitleResp *SetGroupSpecialTitleResp `protobuf:"bytes,317,opt,name=set_group_special_title_resp,json=setGroupSpecialTitleResp,proto3,oneof"`
}

type Frame_SetFriendAddRequestResp struct {
	SetFriendAddRequestResp *SetFriendAddRequestResp `protobuf:"bytes,318,opt,name=set_friend_add_request_resp,json=setFriendAddRequestResp,proto3,oneof"`
}

type Frame_SetGroupAddRequestResp struct {
	SetGroupAddRequestResp *SetGroupAddRequestResp `protobuf:"bytes,319,opt,name=set_group_add_request_resp,json=setGroupAddRequestResp,proto3,oneof"`
}

type Frame_GetLoginInfoResp struct {
	GetLoginInfoResp *GetLoginInfoResp `protobuf:"bytes,320,opt,name=get_login_info_resp,json=getLoginInfoResp,proto3,oneof"`
}

type Frame_GetStrangerInfoResp struct {
	GetStrangerInfoResp *GetStrangerInfoResp `protobuf:"bytes,321,opt,name=get_stranger_info_resp,json=getStrangerInfoResp,proto3,oneof"`
}

type Frame_GetFriendListResp struct {
	GetFriendListResp *GetFriendListResp `protobuf:"bytes,322,opt,name=get_friend_list_resp,json=getFriendListResp,proto3,oneof"`
}

type Frame_GetGroupInfoResp struct {
	GetGroupInfoResp *GetGroupInfoResp `protobuf:"bytes,323,opt,name=get_group_info_resp,json=getGroupInfoResp,proto3,oneof"`
}

type Frame_GetGroupListResp struct {
	GetGroupListResp *GetGroupListResp `protobuf:"bytes,324,opt,name=get_group_list_resp,json=getGroupListResp,proto3,oneof"`
}

type Frame_GetGroupMemberInfoResp struct {
	GetGroupMemberInfoResp *GetGroupMemberInfoResp `protobuf:"bytes,325,opt,name=get_group_member_info_resp,json=getGroupMemberInfoResp,proto3,oneof"`
}

type Frame_GetGroupMemberListResp struct {
	GetGroupMemberListResp *GetGroupMemberListResp `protobuf:"bytes,326,opt,name=get_group_member_list_resp,json=getGroupMemberListResp,proto3,oneof"`
}

type Frame_GetGroupHonorInfoResp struct {
	GetGroupHonorInfoResp *GetGroupHonorInfoResp `protobuf:"bytes,327,opt,name=get_group_honor_info_resp,json=getGroupHonorInfoResp,proto3,oneof"`
}

type Frame_GetCookiesResp struct {
	GetCookiesResp *GetCookiesResp `protobuf:"bytes,328,opt,name=get_cookies_resp,json=getCookiesResp,proto3,oneof"`
}

type Frame_GetCsrfTokenResp struct {
	GetCsrfTokenResp *GetCsrfTokenResp `protobuf:"bytes,329,opt,name=get_csrf_token_resp,json=getCsrfTokenResp,proto3,oneof"`
}

type Frame_GetCredentialsResp struct {
	GetCredentialsResp *GetCredentialsResp `protobuf:"bytes,330,opt,name=get_credentials_resp,json=getCredentialsResp,proto3,oneof"`
}

type Frame_GetRecordResp struct {
	GetRecordResp *GetRecordResp `protobuf:"bytes,331,opt,name=get_record_resp,json=getRecordResp,proto3,oneof"`
}

type Frame_GetImageResp struct {
	GetImageResp *GetImageResp `protobuf:"bytes,332,opt,name=get_image_resp,json=getImageResp,proto3,oneof"`
}

type Frame_CanSendImageResp struct {
	CanSendImageResp *CanSendImageResp `protobuf:"bytes,333,opt,name=can_send_image_resp,json=canSendImageResp,proto3,oneof"`
}

type Frame_CanSendRecordResp struct {
	CanSendRecordResp *CanSendRecordResp `protobuf:"bytes,334,opt,name=can_send_record_resp,json=canSendRecordResp,proto3,oneof"`
}

type Frame_GetStatusResp struct {
	GetStatusResp *GetStatusResp `protobuf:"bytes,335,opt,name=get_status_resp,json=getStatusResp,proto3,oneof"`
}

type Frame_GetVersionInfoResp struct {
	GetVersionInfoResp *GetVersionInfoResp `protobuf:"bytes,336,opt,name=get_version_info_resp,json=getVersionInfoResp,proto3,oneof"`
}

type Frame_SetRestartResp struct {
	SetRestartResp *SetRestartResp `protobuf:"bytes,337,opt,name=set_restart_resp,json=setRestartResp,proto3,oneof"`
}

type Frame_CleanCacheResp struct {
	CleanCacheResp *CleanCacheResp `protobuf:"bytes,338,opt,name=clean_cache_resp,json=cleanCacheResp,proto3,oneof"`
}

type Frame_SetGroupSignInResp struct {
	SetGroupSignInResp *SetGroupSignInResp `protobuf:"bytes,339,opt,name=set_group_sign_in_resp,json=setGroupSignInResp,proto3,oneof"`
}

type Frame_SendMusicResp struct {
	SendMusicResp *SendMusicResp `protobuf:"bytes,340,opt,name=send_music_resp,json=sendMusicResp,proto3,oneof"`
}

type Frame_SendGroupPokeResp struct {
	SendGroupPokeResp *SendGroupPokeResp `protobuf:"bytes,341,opt,name=send_group_poke_resp,json=sendGroupPokeResp,proto3,oneof"`
}

type Frame_SendFriendPokeResp struct {
	SendFriendPokeResp *SendFriendPokeResp `protobuf:"bytes,342,opt,name=send_friend_poke_resp,json=sendFriendPokeResp,proto3,oneof"`
}

type Frame_SendChannelMsgResp struct {
	SendChannelMsgResp *SendChannelMsgResp `protobuf:"bytes,343,opt,name=send_channel_msg_resp,json=sendChannelMsgResp,proto3,oneof"`
}

func (*Frame_PrivateMessageEvent) isFrame_Data() {}

func (*Frame_GroupMessageEvent) isFrame_Data() {}

func (*Frame_GroupUploadNoticeEvent) isFrame_Data() {}

func (*Frame_GroupAdminNoticeEvent) isFrame_Data() {}

func (*Frame_GroupDecreaseNoticeEvent) isFrame_Data() {}

func (*Frame_GroupIncreaseNoticeEvent) isFrame_Data() {}

func (*Frame_GroupBanNoticeEvent) isFrame_Data() {}

func (*Frame_FriendAddNoticeEvent) isFrame_Data() {}

func (*Frame_GroupRecallNoticeEvent) isFrame_Data() {}

func (*Frame_FriendRecallNoticeEvent) isFrame_Data() {}

func (*Frame_FriendRequestEvent) isFrame_Data() {}

func (*Frame_GroupRequestEvent) isFrame_Data() {}

func (*Frame_GroupTempMessageEvent) isFrame_Data() {}

func (*Frame_GroupNotifyEvent) isFrame_Data() {}

func (*Frame_ChannelMessageEvent) isFrame_Data() {}

func (*Frame_SendPrivateMsgReq) isFrame_Data() {}

func (*Frame_SendGroupMsgReq) isFrame_Data() {}

func (*Frame_SendMsgReq) isFrame_Data() {}

func (*Frame_DeleteMsgReq) isFrame_Data() {}

func (*Frame_GetMsgReq) isFrame_Data() {}

func (*Frame_GetForwardMsgReq) isFrame_Data() {}

func (*Frame_SendLikeReq) isFrame_Data() {}

func (*Frame_SetGroupKickReq) isFrame_Data() {}

func (*Frame_SetGroupBanReq) isFrame_Data() {}

func (*Frame_SetGroupAnonymousBanReq) isFrame_Data() {}

func (*Frame_SetGroupWholeBanReq) isFrame_Data() {}

func (*Frame_SetGroupAdminReq) isFrame_Data() {}

func (*Frame_SetGroupAnonymousReq) isFrame_Data() {}

func (*Frame_SetGroupCardReq) isFrame_Data() {}

func (*Frame_SetGroupNameReq) isFrame_Data() {}

func (*Frame_SetGroupLeaveReq) isFrame_Data() {}

func (*Frame_SetGroupSpecialTitleReq) isFrame_Data() {}

func (*Frame_SetFriendAddRequestReq) isFrame_Data() {}

func (*Frame_SetGroupAddRequestReq) isFrame_Data() {}

func (*Frame_GetLoginInfoReq) isFrame_Data() {}

func (*Frame_GetStrangerInfoReq) isFrame_Data() {}

func (*Frame_GetFriendListReq) isFrame_Data() {}

func (*Frame_GetGroupInfoReq) isFrame_Data() {}

func (*Frame_GetGroupListReq) isFrame_Data() {}

func (*Frame_GetGroupMemberInfoReq) isFrame_Data() {}

func (*Frame_GetGroupMemberListReq) isFrame_Data() {}

func (*Frame_GetGroupHonorInfoReq) isFrame_Data() {}

func (*Frame_GetCookiesReq) isFrame_Data() {}

func (*Frame_GetCsrfTokenReq) isFrame_Data() {}

func (*Frame_GetCredentialsReq) isFrame_Data() {}

func (*Frame_GetRecordReq) isFrame_Data() {}

func (*Frame_GetImageReq) isFrame_Data() {}

func (*Frame_CanSendImageReq) isFrame_Data() {}

func (*Frame_CanSendRecordReq) isFrame_Data() {}

func (*Frame_GetStatusReq) isFrame_Data() {}

func (*Frame_GetVersionInfoReq) isFrame_Data() {}

func (*Frame_SetRestartReq) isFrame_Data() {}

func (*Frame_CleanCacheReq) isFrame_Data() {}

func (*Frame_SetGroupSignInReq) isFrame_Data() {}

func (*Frame_SendMusicReq) isFrame_Data() {}

func (*Frame_SendGroupPokeReq) isFrame_Data() {}

func (*Frame_SendFriendPokeReq) isFrame_Data() {}

func (*Frame_SendChannelMsgReq) isFrame_Data() {}

func (*Frame_SendPrivateMsgResp) isFrame_Data() {}

func (*Frame_SendGroupMsgResp) isFrame_Data() {}

func (*Frame_SendMsgResp) isFrame_Data() {}

func (*Frame_DeleteMsgResp) isFrame_Data() {}

func (*Frame_GetMsgResp) isFrame_Data() {}

func (*Frame_GetForwardMsgResp) isFrame_Data() {}

func (*Frame_SendLikeResp) isFrame_Data() {}

func (*Frame_SetGroupKickResp) isFrame_Data() {}

func (*Frame_SetGroupBanResp) isFrame_Data() {}

func (*Frame_SetGroupAnonymousBanResp) isFrame_Data() {}

func (*Frame_SetGroupWholeBanResp) isFrame_Data() {}

func (*Frame_SetGroupAdminResp) isFrame_Data() {}

func (*Frame_SetGroupAnonymousResp) isFrame_Data() {}

func (*Frame_SetGroupCardResp) isFrame_Data() {}

func (*Frame_SetGroupNameResp) isFrame_Data() {}

func (*Frame_SetGroupLeaveResp) isFrame_Data() {}

func (*Frame_SetGroupSpecialTitleResp) isFrame_Data() {}

func (*Frame_SetFriendAddRequestResp) isFrame_Data() {}

func (*Frame_SetGroupAddRequestResp) isFrame_Data() {}

func (*Frame_GetLoginInfoResp) isFrame_Data() {}

func (*Frame_GetStrangerInfoResp) isFrame_Data() {}

func (*Frame_GetFriendListResp) isFrame_Data() {}

func (*Frame_GetGroupInfoResp) isFrame_Data() {}

func (*Frame_GetGroupListResp) isFrame_Data() {}

func (*Frame_GetGroupMemberInfoResp) isFrame_Data() {}

func (*Frame_GetGroupMemberListResp) isFrame_Data() {}

func (*Frame_GetGroupHonorInfoResp) isFrame_Data() {}

func (*Frame_GetCookiesResp) isFrame_Data() {}

func (*Frame_GetCsrfTokenResp) isFrame_Data() {}

func (*Frame_GetCredentialsResp) isFrame_Data() {}

func (*Frame_GetRecordResp) isFrame_Data() {}

func (*Frame_GetImageResp) isFrame_Data() {}

func (*Frame_CanSendImageResp) isFrame_Data() {}

func (*Frame_CanSendRecordResp) isFrame_Data() {}

func (*Frame_GetStatusResp) isFrame_Data() {}

func (*Frame_GetVersionInfoResp) isFrame_Data() {}

func (*Frame_SetRestartResp) isFrame_Data() {}

func (*Frame_CleanCacheResp) isFrame_Data() {}

func (*Frame_SetGroupSignInResp) isFrame_Data() {}

func (*Frame_SendMusicResp) isFrame_Data() {}

func (*Frame_SendGroupPokeResp) isFrame_Data() {}

func (*Frame_SendFriendPokeResp) isFrame_Data() {}

func (*Frame_SendChannelMsgResp) isFrame_Data() {}

var File_onebot_frame_proto protoreflect.FileDescriptor

var file_onebot_frame_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x1a, 0x10, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xce, 0x53, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65,
	0x63, 0x68, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x2e, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12,
	0x51, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x5b, 0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x18,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x1b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x64, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x61, 0x0a, 0x1b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x16,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x55, 0x0a, 0x17, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x14, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x1a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72,
	0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x17, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x58, 0x0a, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x71, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x12, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x73,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xca, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x0f, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x73,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0e, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xcc, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xcd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x09, 0x67, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x4a,
	0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xce, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xcf, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd0, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f,
	0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x44, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0xd1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x60, 0x0a, 0x1b, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x17,
	0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x54, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xd3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a,
	0x13, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0xd4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x56, 0x0a, 0x17, 0x73, 0x65, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0xd5, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xd7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd8, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x73,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x60, 0x0a, 0x1b, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xd9,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x17, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x5d, 0x0a, 0x1a, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0xda, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x5a, 0x0a, 0x19, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xdb, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12,
	0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xdc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xdd,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xde,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xdf, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12,
	0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xe0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x5a, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xe1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x5a, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe2,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x57, 0x0a,
	0x18, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x6e, 0x6f, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe3, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x14, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe4, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f,
	0x63, 0x73, 0x72, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe5,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0f, 0x67, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x4c, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xe6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x3d, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0xe7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0c, 0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3a,
	0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0xe8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0b, 0x67,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x47, 0x0a, 0x12, 0x63, 0x61,
	0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xe9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x13, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xea, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x63,
	0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x3d, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0xeb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0c, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x4d,
	0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xec, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a,
	0x0f, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x18, 0xed, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x48, 0x00,
	0x52, 0x0d, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x40, 0x0a, 0x0f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0xee, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x4e, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xef, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11,
	0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x12, 0x4a, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70,
	0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x18, 0xf1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x14,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x6b, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0xf2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50,
	0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x12, 0x4d, 0x0a, 0x14, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0xf3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6d,
	0x73, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4d, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6d,
	0x73, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74,
	0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d,
	0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0xb3, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a,
	0x13, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xb4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x74,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xb5, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x63, 0x0a, 0x1c, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xb6, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x73,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x18, 0x73, 0x65, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0xb7, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c,
	0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb8, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x59, 0x0a, 0x18, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xb9, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x65,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0xba, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xbb, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xbc, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11,
	0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x63, 0x0a, 0x1c, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x18, 0xbd, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x18, 0x73, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x1b, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xbe, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x17, 0x73, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x1a, 0x73, 0x65, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xbf, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52,
	0x16, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc0,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc1, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0xc2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc3,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x48,
	0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc4, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x67,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5d, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc5, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d,
	0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc6, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a,
	0x19, 0x67, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x6e, 0x6f, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc7, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x10, 0x67, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc8, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e,
	0x67, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a,
	0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x73, 0x72, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc9, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x43, 0x73, 0x72,
	0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x14, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xca, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x67,
	0x65, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xcb,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a,
	0x0e, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xcc, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0c,
	0x67, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x13,
	0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0xcd, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x14, 0x63, 0x61, 0x6e, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x18, 0xce, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74,
	0x2e, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xcf, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x67, 0x65, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xd0, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x10, 0x73,
	0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xd1, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00,
	0x52, 0x0e, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x43, 0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xd2, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x16, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18,
	0xd3, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xd4, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x14, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xd5, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x18, 0xd6, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x62,
	0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x73, 0x67, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0xd7, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e,
	0x65, 0x62, 0x6f, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x1a, 0x38, 0x0a,
	0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe1, 0x13, 0x0a, 0x09, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x66, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0x67, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x68, 0x12, 0x1d,
	0x0a, 0x19, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x69, 0x12, 0x1d, 0x0a,
	0x19, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x6a, 0x12, 0x18, 0x0a, 0x14,
	0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x10, 0x6b, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10,
	0x6c, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c,
	0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x6d, 0x12, 0x1c,
	0x0a, 0x18, 0x54, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x6e, 0x12, 0x17, 0x0a, 0x13,
	0x54, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x10, 0x6f, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x70, 0x12, 0x1a, 0x0a,
	0x16, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x71, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x72,
	0x12, 0x18, 0x0a, 0x14, 0x54, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x73, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x10, 0xc9, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xca, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xcb, 0x01, 0x12, 0x12, 0x0a, 0x0d,
	0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xcc, 0x01,
	0x12, 0x0f, 0x0a, 0x0a, 0x54, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xcd,
	0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xce, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x53, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x10, 0xcf, 0x01, 0x12, 0x15, 0x0a, 0x10,
	0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x10, 0xd0, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xd1, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x10, 0xd2, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xd3, 0x01,
	0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xd4, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x54, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x10, 0xd5, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x10, 0xd6, 0x01, 0x12, 0x15,
	0x0a, 0x10, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x10, 0xd7, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x10, 0xd8, 0x01, 0x12, 0x1d, 0x0a,
	0x18, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x10, 0xd9, 0x01, 0x12, 0x1c, 0x0a, 0x17,
	0x54, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x10, 0xda, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x10, 0xdb, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xdc, 0x01, 0x12, 0x18,
	0x0a, 0x13, 0x54, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xdd, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x10, 0xde, 0x01,
	0x12, 0x15, 0x0a, 0x10, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x10, 0xdf, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x10, 0xe0, 0x01, 0x12, 0x1b,
	0x0a, 0x16, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xe1, 0x01, 0x12, 0x1b, 0x0a, 0x16, 0x54,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x10, 0xe2, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x10, 0xe3, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x10, 0xe4, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x54, 0x47, 0x65,
	0x74, 0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xe5, 0x01,
	0x12, 0x17, 0x0a, 0x12, 0x54, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x10, 0xe6, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x10, 0xe7, 0x01, 0x12, 0x11, 0x0a,
	0x0c, 0x54, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x10, 0xe8, 0x01,
	0x12, 0x15, 0x0a, 0x10, 0x54, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x10, 0xe9, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x43, 0x61, 0x6e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x10, 0xea, 0x01, 0x12,
	0x12, 0x0a, 0x0d, 0x54, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x10, 0xeb, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x10, 0xec, 0x01, 0x12, 0x13, 0x0a, 0x0e,
	0x54, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x10, 0xed,
	0x01, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x71, 0x10, 0xee, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x10, 0xef, 0x01, 0x12,
	0x12, 0x0a, 0x0d, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x10, 0xf0, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x10, 0xf1, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x54,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x10, 0xf2, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10, 0xf3, 0x01, 0x12, 0x18, 0x0a,
	0x13, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xad, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0xae, 0x02, 0x12,
	0x11, 0x0a, 0x0c, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10,
	0xaf, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xb0, 0x02, 0x12, 0x10, 0x0a, 0x0b, 0x54, 0x47, 0x65, 0x74, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb1, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10,
	0xb2, 0x02, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x10, 0xb3, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb4, 0x02, 0x12, 0x15,
	0x0a, 0x10, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xb5, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x10,
	0xb6, 0x02, 0x12, 0x1a, 0x0a, 0x15, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x57,
	0x68, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0xb7, 0x02, 0x12, 0x17,
	0x0a, 0x12, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xb8, 0x02, 0x12, 0x1e, 0x0a, 0x19, 0x54, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xb9, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x10, 0xba, 0x02, 0x12,
	0x16, 0x0a, 0x11, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xbb, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x53, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xbc, 0x02,
	0x12, 0x1e, 0x0a, 0x19, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xbd, 0x02,
	0x12, 0x1d, 0x0a, 0x18, 0x54, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xbe, 0x02, 0x12,
	0x1c, 0x0a, 0x17, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xbf, 0x02, 0x12, 0x16, 0x0a,
	0x11, 0x54, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xc0, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x54, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc1, 0x02,
	0x12, 0x17, 0x0a, 0x12, 0x54, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc2, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc3,
	0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc4, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xc5, 0x02, 0x12, 0x1c, 0x0a, 0x17, 0x54, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x10, 0xc6, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x54, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x10,
	0xc7, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc8, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x47, 0x65, 0x74,
	0x43, 0x73, 0x72, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0xc9, 0x02,
	0x12, 0x18, 0x0a, 0x13, 0x54, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x10, 0xca, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x10, 0xcb, 0x02, 0x12,
	0x12, 0x0a, 0x0d, 0x54, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xcc, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x54, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xcd, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x54,
	0x43, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x10, 0xce, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x10, 0xcf, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x10, 0xd0, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd1, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x54, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd2, 0x02, 0x12,
	0x18, 0x0a, 0x13, 0x54, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd3, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x54, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd4, 0x02, 0x12, 0x17,
	0x0a, 0x12, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6b, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x10, 0xd5, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x53, 0x65, 0x6e, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd6,
	0x02, 0x12, 0x18, 0x0a, 0x13, 0x54, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x10, 0xd7, 0x02, 0x42, 0x06, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6f, 0x6e, 0x65, 0x62, 0x6f, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_onebot_frame_proto_rawDescOnce sync.Once
	file_onebot_frame_proto_rawDescData = file_onebot_frame_proto_rawDesc
)

func file_onebot_frame_proto_rawDescGZIP() []byte {
	file_onebot_frame_proto_rawDescOnce.Do(func() {
		file_onebot_frame_proto_rawDescData = protoimpl.X.CompressGZIP(file_onebot_frame_proto_rawDescData)
	})
	return file_onebot_frame_proto_rawDescData
}

var file_onebot_frame_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_onebot_frame_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_onebot_frame_proto_goTypes = []interface{}{
	(Frame_FrameType)(0),             // 0: onebot.Frame.FrameType
	(*Frame)(nil),                    // 1: onebot.Frame
	nil,                              // 2: onebot.Frame.ExtraEntry
	(*PrivateMessageEvent)(nil),      // 3: onebot.PrivateMessageEvent
	(*GroupMessageEvent)(nil),        // 4: onebot.GroupMessageEvent
	(*GroupUploadNoticeEvent)(nil),   // 5: onebot.GroupUploadNoticeEvent
	(*GroupAdminNoticeEvent)(nil),    // 6: onebot.GroupAdminNoticeEvent
	(*GroupDecreaseNoticeEvent)(nil), // 7: onebot.GroupDecreaseNoticeEvent
	(*GroupIncreaseNoticeEvent)(nil), // 8: onebot.GroupIncreaseNoticeEvent
	(*GroupBanNoticeEvent)(nil),      // 9: onebot.GroupBanNoticeEvent
	(*FriendAddNoticeEvent)(nil),     // 10: onebot.FriendAddNoticeEvent
	(*GroupRecallNoticeEvent)(nil),   // 11: onebot.GroupRecallNoticeEvent
	(*FriendRecallNoticeEvent)(nil),  // 12: onebot.FriendRecallNoticeEvent
	(*FriendRequestEvent)(nil),       // 13: onebot.FriendRequestEvent
	(*GroupRequestEvent)(nil),        // 14: onebot.GroupRequestEvent
	(*GroupTempMessageEvent)(nil),    // 15: onebot.GroupTempMessageEvent
	(*GroupNotifyEvent)(nil),         // 16: onebot.GroupNotifyEvent
	(*ChannelMessageEvent)(nil),      // 17: onebot.ChannelMessageEvent
	(*SendPrivateMsgReq)(nil),        // 18: onebot.SendPrivateMsgReq
	(*SendGroupMsgReq)(nil),          // 19: onebot.SendGroupMsgReq
	(*SendMsgReq)(nil),               // 20: onebot.SendMsgReq
	(*DeleteMsgReq)(nil),             // 21: onebot.DeleteMsgReq
	(*GetMsgReq)(nil),                // 22: onebot.GetMsgReq
	(*GetForwardMsgReq)(nil),         // 23: onebot.GetForwardMsgReq
	(*SendLikeReq)(nil),              // 24: onebot.SendLikeReq
	(*SetGroupKickReq)(nil),          // 25: onebot.SetGroupKickReq
	(*SetGroupBanReq)(nil),           // 26: onebot.SetGroupBanReq
	(*SetGroupAnonymousBanReq)(nil),  // 27: onebot.SetGroupAnonymousBanReq
	(*SetGroupWholeBanReq)(nil),      // 28: onebot.SetGroupWholeBanReq
	(*SetGroupAdminReq)(nil),         // 29: onebot.SetGroupAdminReq
	(*SetGroupAnonymousReq)(nil),     // 30: onebot.SetGroupAnonymousReq
	(*SetGroupCardReq)(nil),          // 31: onebot.SetGroupCardReq
	(*SetGroupNameReq)(nil),          // 32: onebot.SetGroupNameReq
	(*SetGroupLeaveReq)(nil),         // 33: onebot.SetGroupLeaveReq
	(*SetGroupSpecialTitleReq)(nil),  // 34: onebot.SetGroupSpecialTitleReq
	(*SetFriendAddRequestReq)(nil),   // 35: onebot.SetFriendAddRequestReq
	(*SetGroupAddRequestReq)(nil),    // 36: onebot.SetGroupAddRequestReq
	(*GetLoginInfoReq)(nil),          // 37: onebot.GetLoginInfoReq
	(*GetStrangerInfoReq)(nil),       // 38: onebot.GetStrangerInfoReq
	(*GetFriendListReq)(nil),         // 39: onebot.GetFriendListReq
	(*GetGroupInfoReq)(nil),          // 40: onebot.GetGroupInfoReq
	(*GetGroupListReq)(nil),          // 41: onebot.GetGroupListReq
	(*GetGroupMemberInfoReq)(nil),    // 42: onebot.GetGroupMemberInfoReq
	(*GetGroupMemberListReq)(nil),    // 43: onebot.GetGroupMemberListReq
	(*GetGroupHonorInfoReq)(nil),     // 44: onebot.GetGroupHonorInfoReq
	(*GetCookiesReq)(nil),            // 45: onebot.GetCookiesReq
	(*GetCsrfTokenReq)(nil),          // 46: onebot.GetCsrfTokenReq
	(*GetCredentialsReq)(nil),        // 47: onebot.GetCredentialsReq
	(*GetRecordReq)(nil),             // 48: onebot.GetRecordReq
	(*GetImageReq)(nil),              // 49: onebot.GetImageReq
	(*CanSendImageReq)(nil),          // 50: onebot.CanSendImageReq
	(*CanSendRecordReq)(nil),         // 51: onebot.CanSendRecordReq
	(*GetStatusReq)(nil),             // 52: onebot.GetStatusReq
	(*GetVersionInfoReq)(nil),        // 53: onebot.GetVersionInfoReq
	(*SetRestartReq)(nil),            // 54: onebot.SetRestartReq
	(*CleanCacheReq)(nil),            // 55: onebot.CleanCacheReq
	(*SetGroupSignInReq)(nil),        // 56: onebot.SetGroupSignInReq
	(*SendMusicReq)(nil),             // 57: onebot.SendMusicReq
	(*SendGroupPokeReq)(nil),         // 58: onebot.SendGroupPokeReq
	(*SendFriendPokeReq)(nil),        // 59: onebot.SendFriendPokeReq
	(*SendChannelMsgReq)(nil),        // 60: onebot.SendChannelMsgReq
	(*SendPrivateMsgResp)(nil),       // 61: onebot.SendPrivateMsgResp
	(*SendGroupMsgResp)(nil),         // 62: onebot.SendGroupMsgResp
	(*SendMsgResp)(nil),              // 63: onebot.SendMsgResp
	(*DeleteMsgResp)(nil),            // 64: onebot.DeleteMsgResp
	(*GetMsgResp)(nil),               // 65: onebot.GetMsgResp
	(*GetForwardMsgResp)(nil),        // 66: onebot.GetForwardMsgResp
	(*SendLikeResp)(nil),             // 67: onebot.SendLikeResp
	(*SetGroupKickResp)(nil),         // 68: onebot.SetGroupKickResp
	(*SetGroupBanResp)(nil),          // 69: onebot.SetGroupBanResp
	(*SetGroupAnonymousBanResp)(nil), // 70: onebot.SetGroupAnonymousBanResp
	(*SetGroupWholeBanResp)(nil),     // 71: onebot.SetGroupWholeBanResp
	(*SetGroupAdminResp)(nil),        // 72: onebot.SetGroupAdminResp
	(*SetGroupAnonymousResp)(nil),    // 73: onebot.SetGroupAnonymousResp
	(*SetGroupCardResp)(nil),         // 74: onebot.SetGroupCardResp
	(*SetGroupNameResp)(nil),         // 75: onebot.SetGroupNameResp
	(*SetGroupLeaveResp)(nil),        // 76: onebot.SetGroupLeaveResp
	(*SetGroupSpecialTitleResp)(nil), // 77: onebot.SetGroupSpecialTitleResp
	(*SetFriendAddRequestResp)(nil),  // 78: onebot.SetFriendAddRequestResp
	(*SetGroupAddRequestResp)(nil),   // 79: onebot.SetGroupAddRequestResp
	(*GetLoginInfoResp)(nil),         // 80: onebot.GetLoginInfoResp
	(*GetStrangerInfoResp)(nil),      // 81: onebot.GetStrangerInfoResp
	(*GetFriendListResp)(nil),        // 82: onebot.GetFriendListResp
	(*GetGroupInfoResp)(nil),         // 83: onebot.GetGroupInfoResp
	(*GetGroupListResp)(nil),         // 84: onebot.GetGroupListResp
	(*GetGroupMemberInfoResp)(nil),   // 85: onebot.GetGroupMemberInfoResp
	(*GetGroupMemberListResp)(nil),   // 86: onebot.GetGroupMemberListResp
	(*GetGroupHonorInfoResp)(nil),    // 87: onebot.GetGroupHonorInfoResp
	(*GetCookiesResp)(nil),           // 88: onebot.GetCookiesResp
	(*GetCsrfTokenResp)(nil),         // 89: onebot.GetCsrfTokenResp
	(*GetCredentialsResp)(nil),       // 90: onebot.GetCredentialsResp
	(*GetRecordResp)(nil),            // 91: onebot.GetRecordResp
	(*GetImageResp)(nil),             // 92: onebot.GetImageResp
	(*CanSendImageResp)(nil),         // 93: onebot.CanSendImageResp
	(*CanSendRecordResp)(nil),        // 94: onebot.CanSendRecordResp
	(*GetStatusResp)(nil),            // 95: onebot.GetStatusResp
	(*GetVersionInfoResp)(nil),       // 96: onebot.GetVersionInfoResp
	(*SetRestartResp)(nil),           // 97: onebot.SetRestartResp
	(*CleanCacheResp)(nil),           // 98: onebot.CleanCacheResp
	(*SetGroupSignInResp)(nil),       // 99: onebot.SetGroupSignInResp
	(*SendMusicResp)(nil),            // 100: onebot.SendMusicResp
	(*SendGroupPokeResp)(nil),        // 101: onebot.SendGroupPokeResp
	(*SendFriendPokeResp)(nil),       // 102: onebot.SendFriendPokeResp
	(*SendChannelMsgResp)(nil),       // 103: onebot.SendChannelMsgResp
}
var file_onebot_frame_proto_depIdxs = []int32{
	0,   // 0: onebot.Frame.frame_type:type_name -> onebot.Frame.FrameType
	2,   // 1: onebot.Frame.extra:type_name -> onebot.Frame.ExtraEntry
	3,   // 2: onebot.Frame.private_message_event:type_name -> onebot.PrivateMessageEvent
	4,   // 3: onebot.Frame.group_message_event:type_name -> onebot.GroupMessageEvent
	5,   // 4: onebot.Frame.group_upload_notice_event:type_name -> onebot.GroupUploadNoticeEvent
	6,   // 5: onebot.Frame.group_admin_notice_event:type_name -> onebot.GroupAdminNoticeEvent
	7,   // 6: onebot.Frame.group_decrease_notice_event:type_name -> onebot.GroupDecreaseNoticeEvent
	8,   // 7: onebot.Frame.group_increase_notice_event:type_name -> onebot.GroupIncreaseNoticeEvent
	9,   // 8: onebot.Frame.group_ban_notice_event:type_name -> onebot.GroupBanNoticeEvent
	10,  // 9: onebot.Frame.friend_add_notice_event:type_name -> onebot.FriendAddNoticeEvent
	11,  // 10: onebot.Frame.group_recall_notice_event:type_name -> onebot.GroupRecallNoticeEvent
	12,  // 11: onebot.Frame.friend_recall_notice_event:type_name -> onebot.FriendRecallNoticeEvent
	13,  // 12: onebot.Frame.friend_request_event:type_name -> onebot.FriendRequestEvent
	14,  // 13: onebot.Frame.group_request_event:type_name -> onebot.GroupRequestEvent
	15,  // 14: onebot.Frame.group_temp_message_event:type_name -> onebot.GroupTempMessageEvent
	16,  // 15: onebot.Frame.group_notify_event:type_name -> onebot.GroupNotifyEvent
	17,  // 16: onebot.Frame.channel_message_event:type_name -> onebot.ChannelMessageEvent
	18,  // 17: onebot.Frame.send_private_msg_req:type_name -> onebot.SendPrivateMsgReq
	19,  // 18: onebot.Frame.send_group_msg_req:type_name -> onebot.SendGroupMsgReq
	20,  // 19: onebot.Frame.send_msg_req:type_name -> onebot.SendMsgReq
	21,  // 20: onebot.Frame.delete_msg_req:type_name -> onebot.DeleteMsgReq
	22,  // 21: onebot.Frame.get_msg_req:type_name -> onebot.GetMsgReq
	23,  // 22: onebot.Frame.get_forward_msg_req:type_name -> onebot.GetForwardMsgReq
	24,  // 23: onebot.Frame.send_like_req:type_name -> onebot.SendLikeReq
	25,  // 24: onebot.Frame.set_group_kick_req:type_name -> onebot.SetGroupKickReq
	26,  // 25: onebot.Frame.set_group_ban_req:type_name -> onebot.SetGroupBanReq
	27,  // 26: onebot.Frame.set_group_anonymous_ban_req:type_name -> onebot.SetGroupAnonymousBanReq
	28,  // 27: onebot.Frame.set_group_whole_ban_req:type_name -> onebot.SetGroupWholeBanReq
	29,  // 28: onebot.Frame.set_group_admin_req:type_name -> onebot.SetGroupAdminReq
	30,  // 29: onebot.Frame.set_group_anonymous_req:type_name -> onebot.SetGroupAnonymousReq
	31,  // 30: onebot.Frame.set_group_card_req:type_name -> onebot.SetGroupCardReq
	32,  // 31: onebot.Frame.set_group_name_req:type_name -> onebot.SetGroupNameReq
	33,  // 32: onebot.Frame.set_group_leave_req:type_name -> onebot.SetGroupLeaveReq
	34,  // 33: onebot.Frame.set_group_special_title_req:type_name -> onebot.SetGroupSpecialTitleReq
	35,  // 34: onebot.Frame.set_friend_add_request_req:type_name -> onebot.SetFriendAddRequestReq
	36,  // 35: onebot.Frame.set_group_add_request_req:type_name -> onebot.SetGroupAddRequestReq
	37,  // 36: onebot.Frame.get_login_info_req:type_name -> onebot.GetLoginInfoReq
	38,  // 37: onebot.Frame.get_stranger_info_req:type_name -> onebot.GetStrangerInfoReq
	39,  // 38: onebot.Frame.get_friend_list_req:type_name -> onebot.GetFriendListReq
	40,  // 39: onebot.Frame.get_group_info_req:type_name -> onebot.GetGroupInfoReq
	41,  // 40: onebot.Frame.get_group_list_req:type_name -> onebot.GetGroupListReq
	42,  // 41: onebot.Frame.get_group_member_info_req:type_name -> onebot.GetGroupMemberInfoReq
	43,  // 42: onebot.Frame.get_group_member_list_req:type_name -> onebot.GetGroupMemberListReq
	44,  // 43: onebot.Frame.get_group_honor_info_req:type_name -> onebot.GetGroupHonorInfoReq
	45,  // 44: onebot.Frame.get_cookies_req:type_name -> onebot.GetCookiesReq
	46,  // 45: onebot.Frame.get_csrf_token_req:type_name -> onebot.GetCsrfTokenReq
	47,  // 46: onebot.Frame.get_credentials_req:type_name -> onebot.GetCredentialsReq
	48,  // 47: onebot.Frame.get_record_req:type_name -> onebot.GetRecordReq
	49,  // 48: onebot.Frame.get_image_req:type_name -> onebot.GetImageReq
	50,  // 49: onebot.Frame.can_send_image_req:type_name -> onebot.CanSendImageReq
	51,  // 50: onebot.Frame.can_send_record_req:type_name -> onebot.CanSendRecordReq
	52,  // 51: onebot.Frame.get_status_req:type_name -> onebot.GetStatusReq
	53,  // 52: onebot.Frame.get_version_info_req:type_name -> onebot.GetVersionInfoReq
	54,  // 53: onebot.Frame.set_restart_req:type_name -> onebot.SetRestartReq
	55,  // 54: onebot.Frame.clean_cache_req:type_name -> onebot.CleanCacheReq
	56,  // 55: onebot.Frame.set_group_sign_in_req:type_name -> onebot.SetGroupSignInReq
	57,  // 56: onebot.Frame.send_music_req:type_name -> onebot.SendMusicReq
	58,  // 57: onebot.Frame.send_group_poke_req:type_name -> onebot.SendGroupPokeReq
	59,  // 58: onebot.Frame.send_friend_poke_req:type_name -> onebot.SendFriendPokeReq
	60,  // 59: onebot.Frame.send_channel_msg_req:type_name -> onebot.SendChannelMsgReq
	61,  // 60: onebot.Frame.send_private_msg_resp:type_name -> onebot.SendPrivateMsgResp
	62,  // 61: onebot.Frame.send_group_msg_resp:type_name -> onebot.SendGroupMsgResp
	63,  // 62: onebot.Frame.send_msg_resp:type_name -> onebot.SendMsgResp
	64,  // 63: onebot.Frame.delete_msg_resp:type_name -> onebot.DeleteMsgResp
	65,  // 64: onebot.Frame.get_msg_resp:type_name -> onebot.GetMsgResp
	66,  // 65: onebot.Frame.get_forward_msg_resp:type_name -> onebot.GetForwardMsgResp
	67,  // 66: onebot.Frame.send_like_resp:type_name -> onebot.SendLikeResp
	68,  // 67: onebot.Frame.set_group_kick_resp:type_name -> onebot.SetGroupKickResp
	69,  // 68: onebot.Frame.set_group_ban_resp:type_name -> onebot.SetGroupBanResp
	70,  // 69: onebot.Frame.set_group_anonymous_ban_resp:type_name -> onebot.SetGroupAnonymousBanResp
	71,  // 70: onebot.Frame.set_group_whole_ban_resp:type_name -> onebot.SetGroupWholeBanResp
	72,  // 71: onebot.Frame.set_group_admin_resp:type_name -> onebot.SetGroupAdminResp
	73,  // 72: onebot.Frame.set_group_anonymous_resp:type_name -> onebot.SetGroupAnonymousResp
	74,  // 73: onebot.Frame.set_group_card_resp:type_name -> onebot.SetGroupCardResp
	75,  // 74: onebot.Frame.set_group_name_resp:type_name -> onebot.SetGroupNameResp
	76,  // 75: onebot.Frame.set_group_leave_resp:type_name -> onebot.SetGroupLeaveResp
	77,  // 76: onebot.Frame.set_group_special_title_resp:type_name -> onebot.SetGroupSpecialTitleResp
	78,  // 77: onebot.Frame.set_friend_add_request_resp:type_name -> onebot.SetFriendAddRequestResp
	79,  // 78: onebot.Frame.set_group_add_request_resp:type_name -> onebot.SetGroupAddRequestResp
	80,  // 79: onebot.Frame.get_login_info_resp:type_name -> onebot.GetLoginInfoResp
	81,  // 80: onebot.Frame.get_stranger_info_resp:type_name -> onebot.GetStrangerInfoResp
	82,  // 81: onebot.Frame.get_friend_list_resp:type_name -> onebot.GetFriendListResp
	83,  // 82: onebot.Frame.get_group_info_resp:type_name -> onebot.GetGroupInfoResp
	84,  // 83: onebot.Frame.get_group_list_resp:type_name -> onebot.GetGroupListResp
	85,  // 84: onebot.Frame.get_group_member_info_resp:type_name -> onebot.GetGroupMemberInfoResp
	86,  // 85: onebot.Frame.get_group_member_list_resp:type_name -> onebot.GetGroupMemberListResp
	87,  // 86: onebot.Frame.get_group_honor_info_resp:type_name -> onebot.GetGroupHonorInfoResp
	88,  // 87: onebot.Frame.get_cookies_resp:type_name -> onebot.GetCookiesResp
	89,  // 88: onebot.Frame.get_csrf_token_resp:type_name -> onebot.GetCsrfTokenResp
	90,  // 89: onebot.Frame.get_credentials_resp:type_name -> onebot.GetCredentialsResp
	91,  // 90: onebot.Frame.get_record_resp:type_name -> onebot.GetRecordResp
	92,  // 91: onebot.Frame.get_image_resp:type_name -> onebot.GetImageResp
	93,  // 92: onebot.Frame.can_send_image_resp:type_name -> onebot.CanSendImageResp
	94,  // 93: onebot.Frame.can_send_record_resp:type_name -> onebot.CanSendRecordResp
	95,  // 94: onebot.Frame.get_status_resp:type_name -> onebot.GetStatusResp
	96,  // 95: onebot.Frame.get_version_info_resp:type_name -> onebot.GetVersionInfoResp
	97,  // 96: onebot.Frame.set_restart_resp:type_name -> onebot.SetRestartResp
	98,  // 97: onebot.Frame.clean_cache_resp:type_name -> onebot.CleanCacheResp
	99,  // 98: onebot.Frame.set_group_sign_in_resp:type_name -> onebot.SetGroupSignInResp
	100, // 99: onebot.Frame.send_music_resp:type_name -> onebot.SendMusicResp
	101, // 100: onebot.Frame.send_group_poke_resp:type_name -> onebot.SendGroupPokeResp
	102, // 101: onebot.Frame.send_friend_poke_resp:type_name -> onebot.SendFriendPokeResp
	103, // 102: onebot.Frame.send_channel_msg_resp:type_name -> onebot.SendChannelMsgResp
	103, // [103:103] is the sub-list for method output_type
	103, // [103:103] is the sub-list for method input_type
	103, // [103:103] is the sub-list for extension type_name
	103, // [103:103] is the sub-list for extension extendee
	0,   // [0:103] is the sub-list for field type_name
}

func init() { file_onebot_frame_proto_init() }
func file_onebot_frame_proto_init() {
	if File_onebot_frame_proto != nil {
		return
	}
	file_onebot_api_proto_init()
	file_onebot_event_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_onebot_frame_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_onebot_frame_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Frame_PrivateMessageEvent)(nil),
		(*Frame_GroupMessageEvent)(nil),
		(*Frame_GroupUploadNoticeEvent)(nil),
		(*Frame_GroupAdminNoticeEvent)(nil),
		(*Frame_GroupDecreaseNoticeEvent)(nil),
		(*Frame_GroupIncreaseNoticeEvent)(nil),
		(*Frame_GroupBanNoticeEvent)(nil),
		(*Frame_FriendAddNoticeEvent)(nil),
		(*Frame_GroupRecallNoticeEvent)(nil),
		(*Frame_FriendRecallNoticeEvent)(nil),
		(*Frame_FriendRequestEvent)(nil),
		(*Frame_GroupRequestEvent)(nil),
		(*Frame_GroupTempMessageEvent)(nil),
		(*Frame_GroupNotifyEvent)(nil),
		(*Frame_ChannelMessageEvent)(nil),
		(*Frame_SendPrivateMsgReq)(nil),
		(*Frame_SendGroupMsgReq)(nil),
		(*Frame_SendMsgReq)(nil),
		(*Frame_DeleteMsgReq)(nil),
		(*Frame_GetMsgReq)(nil),
		(*Frame_GetForwardMsgReq)(nil),
		(*Frame_SendLikeReq)(nil),
		(*Frame_SetGroupKickReq)(nil),
		(*Frame_SetGroupBanReq)(nil),
		(*Frame_SetGroupAnonymousBanReq)(nil),
		(*Frame_SetGroupWholeBanReq)(nil),
		(*Frame_SetGroupAdminReq)(nil),
		(*Frame_SetGroupAnonymousReq)(nil),
		(*Frame_SetGroupCardReq)(nil),
		(*Frame_SetGroupNameReq)(nil),
		(*Frame_SetGroupLeaveReq)(nil),
		(*Frame_SetGroupSpecialTitleReq)(nil),
		(*Frame_SetFriendAddRequestReq)(nil),
		(*Frame_SetGroupAddRequestReq)(nil),
		(*Frame_GetLoginInfoReq)(nil),
		(*Frame_GetStrangerInfoReq)(nil),
		(*Frame_GetFriendListReq)(nil),
		(*Frame_GetGroupInfoReq)(nil),
		(*Frame_GetGroupListReq)(nil),
		(*Frame_GetGroupMemberInfoReq)(nil),
		(*Frame_GetGroupMemberListReq)(nil),
		(*Frame_GetGroupHonorInfoReq)(nil),
		(*Frame_GetCookiesReq)(nil),
		(*Frame_GetCsrfTokenReq)(nil),
		(*Frame_GetCredentialsReq)(nil),
		(*Frame_GetRecordReq)(nil),
		(*Frame_GetImageReq)(nil),
		(*Frame_CanSendImageReq)(nil),
		(*Frame_CanSendRecordReq)(nil),
		(*Frame_GetStatusReq)(nil),
		(*Frame_GetVersionInfoReq)(nil),
		(*Frame_SetRestartReq)(nil),
		(*Frame_CleanCacheReq)(nil),
		(*Frame_SetGroupSignInReq)(nil),
		(*Frame_SendMusicReq)(nil),
		(*Frame_SendGroupPokeReq)(nil),
		(*Frame_SendFriendPokeReq)(nil),
		(*Frame_SendChannelMsgReq)(nil),
		(*Frame_SendPrivateMsgResp)(nil),
		(*Frame_SendGroupMsgResp)(nil),
		(*Frame_SendMsgResp)(nil),
		(*Frame_DeleteMsgResp)(nil),
		(*Frame_GetMsgResp)(nil),
		(*Frame_GetForwardMsgResp)(nil),
		(*Frame_SendLikeResp)(nil),
		(*Frame_SetGroupKickResp)(nil),
		(*Frame_SetGroupBanResp)(nil),
		(*Frame_SetGroupAnonymousBanResp)(nil),
		(*Frame_SetGroupWholeBanResp)(nil),
		(*Frame_SetGroupAdminResp)(nil),
		(*Frame_SetGroupAnonymousResp)(nil),
		(*Frame_SetGroupCardResp)(nil),
		(*Frame_SetGroupNameResp)(nil),
		(*Frame_SetGroupLeaveResp)(nil),
		(*Frame_SetGroupSpecialTitleResp)(nil),
		(*Frame_SetFriendAddRequestResp)(nil),
		(*Frame_SetGroupAddRequestResp)(nil),
		(*Frame_GetLoginInfoResp)(nil),
		(*Frame_GetStrangerInfoResp)(nil),
		(*Frame_GetFriendListResp)(nil),
		(*Frame_GetGroupInfoResp)(nil),
		(*Frame_GetGroupListResp)(nil),
		(*Frame_GetGroupMemberInfoResp)(nil),
		(*Frame_GetGroupMemberListResp)(nil),
		(*Frame_GetGroupHonorInfoResp)(nil),
		(*Frame_GetCookiesResp)(nil),
		(*Frame_GetCsrfTokenResp)(nil),
		(*Frame_GetCredentialsResp)(nil),
		(*Frame_GetRecordResp)(nil),
		(*Frame_GetImageResp)(nil),
		(*Frame_CanSendImageResp)(nil),
		(*Frame_CanSendRecordResp)(nil),
		(*Frame_GetStatusResp)(nil),
		(*Frame_GetVersionInfoResp)(nil),
		(*Frame_SetRestartResp)(nil),
		(*Frame_CleanCacheResp)(nil),
		(*Frame_SetGroupSignInResp)(nil),
		(*Frame_SendMusicResp)(nil),
		(*Frame_SendGroupPokeResp)(nil),
		(*Frame_SendFriendPokeResp)(nil),
		(*Frame_SendChannelMsgResp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_onebot_frame_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_onebot_frame_proto_goTypes,
		DependencyIndexes: file_onebot_frame_proto_depIdxs,
		EnumInfos:         file_onebot_frame_proto_enumTypes,
		MessageInfos:      file_onebot_frame_proto_msgTypes,
	}.Build()
	File_onebot_frame_proto = out.File
	file_onebot_frame_proto_rawDesc = nil
	file_onebot_frame_proto_goTypes = nil
	file_onebot_frame_proto_depIdxs = nil
}
